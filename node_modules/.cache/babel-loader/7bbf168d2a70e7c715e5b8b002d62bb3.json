{"ast":null,"code":"import _classCallCheck from \"/Users/moriarty/Documents/UniBe/PSE/medlandscape/medlandscape-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/moriarty/Documents/UniBe/PSE/medlandscape/medlandscape-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/moriarty/Documents/UniBe/PSE/medlandscape/medlandscape-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/moriarty/Documents/UniBe/PSE/medlandscape/medlandscape-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/moriarty/Documents/UniBe/PSE/medlandscape/medlandscape-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/moriarty/Documents/UniBe/PSE/medlandscape/medlandscape-app/src/components/Maps/Maps.js\";\nimport React, { Component } from 'react';\nimport { Map, TileLayer } from 'react-leaflet';\nimport './Maps.css';\nimport TestComponent from './TestComponent.js';\nimport HospitalMap from './HospitalMap.js';\nimport CantonMap from './CantonMap.js';\n\nvar Maps =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Maps, _Component);\n\n  function Maps(props) {\n    var _this;\n\n    _classCallCheck(this, Maps);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Maps).call(this, props));\n\n    _this.returnData = function (item) {\n      var varName = _this.props.variableInfo.name;\n      console.log(item);\n      var values = item.attributes[varName];\n      var data = values[_this.props.year] ? values[_this.props.year] : 0; // CMI brutto, siehe Wallis\n      //let data = (values[this.props.year]);\n\n      return data;\n    };\n\n    _this.setMaxAndMin = function () {\n      var min = 1000000000000,\n          max = 0,\n          sum = 0,\n          counter = 0;\n\n      _this.props.objects.map(function (obj) {\n        var val = _this.returnData(obj);\n\n        if (val === 0) {//console.log(obj.name + \" has value of 0.\");\n        }\n\n        if (obj.name !== \"Ganze Schweiz\") {\n          max = max < val ? val : max;\n          min = min > val ? val : min;\n          sum += val;\n          counter++;\n        }\n      });\n\n      var mean = sum / counter;\n      sum = 0;\n\n      _this.props.objects.map(function (obj) {\n        var val = _this.returnData(obj);\n\n        if (obj.name !== \"Ganze Schweiz\") {\n          var squareDif = Math.pow(val - mean, 2);\n          sum += squareDif;\n        }\n      });\n\n      var meanSquareDif = sum / counter;\n      var std = Math.sqrt(meanSquareDif);\n      return {\n        mean: mean,\n        std: std,\n        max: max,\n        min: min\n      };\n    };\n\n    _this.isNormable = function () {\n      var type = _this.props.variableInfo.variable_type;\n      return type === \"float\" || type === \"number\" || type === \"percentage\" || type === \"relevance\";\n    };\n\n    _this.state = {\n      lat: 46.87,\n      lng: 8.24,\n      zoom: 8\n    };\n    return _this;\n  }\n  /**\n      * Returns the values stored in a this.props.objects canton/hospital\n      * !! Currently always returns firstEntry (first available year)\n      * @param  {Canton || Hospital Object} item The object to extract the values from\n      * @return {int || float} The selected entry in the item.values object\n      */\n\n\n  _createClass(Maps, [{\n    key: \"render\",\n    value: function render() {\n      var ready = this.props.hasLoaded && this.isNormable();\n      var componentToRender = null;\n\n      if (ready) {\n        componentToRender = this.props.variableInfo.variable_model === \"Canton\" ? React.createElement(CantonMap, {\n          data: this.props.objects,\n          returnData: this.returnData,\n          maxAndMin: this.setMaxAndMin(),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93\n          },\n          __self: this\n        }) : React.createElement(HospitalMap, {\n          data: this.props.objects,\n          returnData: this.returnData,\n          maxAndMin: this.setMaxAndMin(),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(Map // set up map\n      , {\n        className: \"map\",\n        center: [this.state.lat, this.state.lng],\n        zoom: this.state.zoom,\n        minZoom: 8 // set minimum zoom level\n        ,\n        maxZoom: 16 // set maximum zoom level\n        ,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(TileLayer // add background layer\n      , {\n        attribution: \"&copy <a href=\\\"http://osm.org/copyright\\\">OpenStreetMap</a> contributors\",\n        url: \"https://api.mapbox.com/styles/v1/nathi/cjf8cggx93p3u2qrqrgwoh5nh/tiles/256/{z}/{x}/{y}?access_token=pk.eyJ1IjoibmF0aGkiLCJhIjoiY2pmOGJ4ZXJmMXMyZDJ4bzRoYWRxbzhteCJ9.x2dbGjsVZTA9HLw6VWaQow\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }), componentToRender);\n    }\n  }]);\n\n  return Maps;\n}(Component);\n\nexport default Maps;","map":{"version":3,"sources":["/Users/moriarty/Documents/UniBe/PSE/medlandscape/medlandscape-app/src/components/Maps/Maps.js"],"names":["React","Component","Map","TileLayer","TestComponent","HospitalMap","CantonMap","Maps","props","returnData","item","varName","variableInfo","name","console","log","values","attributes","data","year","setMaxAndMin","min","max","sum","counter","objects","map","obj","val","mean","squareDif","Math","pow","meanSquareDif","std","sqrt","isNormable","type","variable_type","state","lat","lng","zoom","ready","hasLoaded","componentToRender","variable_model"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { Map, TileLayer } from 'react-leaflet'\nimport './Maps.css';\n\nimport TestComponent from './TestComponent.js';\nimport HospitalMap from './HospitalMap.js';\nimport CantonMap from './CantonMap.js';\n\nclass Maps extends Component {\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tlat: 46.87,\n\t\t\tlng: 8.24,\n\t\t\tzoom: 8,\n\t\t};\n\t}\n\n\t/**\n     * Returns the values stored in a this.props.objects canton/hospital\n     * !! Currently always returns firstEntry (first available year)\n     * @param  {Canton || Hospital Object} item The object to extract the values from\n     * @return {int || float} The selected entry in the item.values object\n     */\n\treturnData = (item) => {\n        let varName = this.props.variableInfo.name;\n\t\tconsole.log(item);\n\t\tlet values = item.attributes[varName];\n        let data = (values[this.props.year]) ? values[this.props.year] : 0;\n        // CMI brutto, siehe Wallis\n        //let data = (values[this.props.year]);\n\t\treturn data;\n\t}\n\n\t/**\n   * Iterates through this.props.objects and finds mean, standard deviation, max and min values.\n   * @return {Object} Object.min minimum, Object.max maximum, Object.mean mean, Object.std standard deviation,\n \t*/\n\tsetMaxAndMin = () => {\n        let min = 1000000000000, max = 0, sum = 0, counter = 0;\n\n        this.props.objects.map((obj) => {\n            let val = this.returnData(obj);\n            if (val === 0) {\n                //console.log(obj.name + \" has value of 0.\");\n            }\n            if (obj.name !== \"Ganze Schweiz\") {\n                max = (max < val) ? val : max;\n                min = (min > val) ? val : min;\n                sum += val;\n                counter++;\n            }\n        })\n\n        const mean = sum/counter;\n        sum = 0;\n\n        this.props.objects.map((obj) => {\n            let val = this.returnData(obj);\n            if (obj.name !== \"Ganze Schweiz\") {\n                const squareDif = Math.pow(val - mean, 2);\n                sum += squareDif;\n            }\n        })\n\n        const meanSquareDif = sum/counter;\n        const std = Math.sqrt(meanSquareDif);\n\n        return {\n            mean: mean,\n            std: std,\n            max: max,\n            min: min\n        }\n\t}\n\n  /**\n   * Checks if the selected Variable passed through this.props.varInfo\n   * is normable (a number or similar).\n   * @return {Boolean}\n  */\n  isNormable = () => {\n    let type = this.props.variableInfo.variable_type;\n    return (type === \"float\" || type === \"number\" || type === \"percentage\" || type === \"relevance\");\n  }\n\n\trender() {\n        let ready = (this.props.hasLoaded && this.isNormable());\n        let componentToRender = null;\n\n        if (ready) {\n          componentToRender = (this.props.variableInfo.variable_model === \"Canton\")\n          ? <CantonMap data={this.props.objects} returnData={this.returnData} maxAndMin={this.setMaxAndMin()} />\n          : <HospitalMap data={this.props.objects} returnData={this.returnData} maxAndMin={this.setMaxAndMin()} />\n        }\n\n        return (\n        \t<Map // set up map\n                className=\"map\"\n        \t\tcenter={[this.state.lat, this.state.lng]}\n        \t\tzoom={this.state.zoom}\n        \t\tminZoom={8} // set minimum zoom level\n        \t\tmaxZoom={16} // set maximum zoom level\n        \t\t>\n        \t\t<TileLayer // add background layer\n        \t\t\tattribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n        \t\t\turl=\"https://api.mapbox.com/styles/v1/nathi/cjf8cggx93p3u2qrqrgwoh5nh/tiles/256/{z}/{x}/{y}?access_token=pk.eyJ1IjoibmF0aGkiLCJhIjoiY2pmOGJ4ZXJmMXMyZDJ4bzRoYWRxbzhteCJ9.x2dbGjsVZTA9HLw6VWaQow\"\n        \t\t/>\n        \t\t{componentToRender}\n        \t</Map>\n        )\n\t}\n}\n\nexport default Maps;\n"]},"metadata":{},"sourceType":"module"}