{"ast":null,"code":"/**\n* utils.mjs\n* functions to be used all over the app\n**/\n\n/**\n* rounding a number to 2 decimals and add \" ' \" for big numbers\n* @param {number} number to be formatted\n* @return {string} str the formatted string\n**/\nexport function numberFormat(number) {\n  var nmbr = Math.round(number * 100) / 100;\n  var str = nmbr.toString();\n  var index;\n  index = str.indexOf(\".\");\n\n  if (index = str.indexOf(\".\") === -1) {\n    index = str.length;\n  }\n\n  while (index > 3) {\n    index -= 3;\n    str = str.substring(0, index) + \"'\" + str.substring(index, str.length);\n  }\n\n  return str;\n}","map":{"version":3,"sources":["/Users/moriarty/Documents/UniBe/PSE/medlandscape/medlandscape-app/src/utils.mjs"],"names":["numberFormat","number","nmbr","Math","round","str","toString","index","indexOf","length","substring"],"mappings":"AAAA;;;;;AAKA;;;;;AAKA,OAAO,SAASA,YAAT,CAAsBC,MAAtB,EAA6B;AAChC,MAAIC,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWH,MAAM,GAAC,GAAlB,IAAuB,GAAlC;AACA,MAAII,GAAG,GAAGH,IAAI,CAACI,QAAL,EAAV;AACA,MAAIC,KAAJ;AACAA,EAAAA,KAAK,GAAGF,GAAG,CAACG,OAAJ,CAAY,GAAZ,CAAR;;AACA,MAAID,KAAK,GAAGF,GAAG,CAACG,OAAJ,CAAY,GAAZ,MAAqB,CAAC,CAAlC,EAAoC;AAChCD,IAAAA,KAAK,GAAGF,GAAG,CAACI,MAAZ;AACH;;AACD,SAAOF,KAAK,GAAG,CAAf,EAAiB;AACbA,IAAAA,KAAK,IAAI,CAAT;AACAF,IAAAA,GAAG,GAAGA,GAAG,CAACK,SAAJ,CAAc,CAAd,EAAiBH,KAAjB,IAA0B,GAA1B,GAAgCF,GAAG,CAACK,SAAJ,CAAcH,KAAd,EAAqBF,GAAG,CAACI,MAAzB,CAAtC;AACH;;AACD,SAAOJ,GAAP;AACH","sourcesContent":["/**\n* utils.mjs\n* functions to be used all over the app\n**/\n\n/**\n* rounding a number to 2 decimals and add \" ' \" for big numbers\n* @param {number} number to be formatted\n* @return {string} str the formatted string\n**/\nexport function numberFormat(number){\n    let nmbr = Math.round(number*100)/100;\n    let str = nmbr.toString();\n    let index;\n    index = str.indexOf(\".\");\n    if (index = str.indexOf(\".\") === -1){\n        index = str.length;\n    }\n    while (index > 3){\n        index -= 3;\n        str = str.substring(0, index) + \"'\" + str.substring(index, str.length);\n    }\n    return str;\n}\n"]},"metadata":{},"sourceType":"module"}