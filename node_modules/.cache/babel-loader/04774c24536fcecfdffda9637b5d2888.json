{"ast":null,"code":"/**\n* utils.mjs\n* utility functions to be used all over the app\n**/\n\n/**\n* rounding a number to 2 decimals and add \" ' \" for big numbers\n* @param {number} number to be formatted\n* @return {string} the formatted string\n**/\nexport function numberFormat(number) {\n  if (typeof number !== \"number\") return number;\n  var nmbr = Math.round(number * 100) / 100;\n  var str = nmbr.toString();\n  var index;\n  index = str.indexOf(\".\");\n\n  if (index = str.indexOf(\".\") === -1) {\n    index = str.length;\n  }\n\n  while (index > 3) {\n    index -= 3;\n    str = str.substring(0, index) + \"'\" + str.substring(index, str.length);\n  }\n\n  return str;\n}\n/**\n* calculate pearson correlation between two given data arrays\n* @param {Array} x first data array\n* @param {Array} y second data array\n* @return {number} the pearson correlation\n**/\n\nexport function pearsonCorrelation(x, y) {\n  var n = x.length;\n  var sum_X = 0,\n      sum_Y = 0,\n      sum_XY = 0;\n  var squareSum_X = 0,\n      squareSum_Y = 0;\n\n  for (var i = 0; i < n; i++) {\n    // sum of elements of array X.\n    sum_X = sum_X + x[i]; // sum of elements of array Y.\n\n    sum_Y = sum_Y + y[i]; // sum of X[i] * Y[i].\n\n    sum_XY = sum_XY + x[i] * y[i]; // sum of square of array elements.\n\n    squareSum_X = squareSum_X + x[i] * x[i];\n    squareSum_Y = squareSum_Y + y[i] * y[i];\n  } // use formula for calculating correlation coefficient r.\n\n\n  var r = (n * sum_XY - sum_X * sum_Y) / Math.sqrt((n * squareSum_X - sum_X * sum_X) * (n * squareSum_Y - sum_Y * sum_Y));\n  r = Math.round(r * 1000) / 1000;\n\n  if (r === NaN) {\n    r = \"-\";\n  }\n\n  return r;\n}\n/**\n * Calculates and returns a rgb color\n * @return {String} The rgb color as a string.\n */\n\nexport function calculateCircleColor(item, year) {\n  var color;\n\n  switch (item.attributes[\"Typ\"][year]) {\n    // unispital\n    case \"K111\":\n      color = \"#a72a2a\";\n      break;\n    // allgemeinspital zentrumsversorgung\n\n    case \"K112\":\n      color = \"#a79f2a\";\n      break;\n    // allgemeinspital grundversorgung\n\n    case \"K121\":\n      color = \"#2da72a\";\n      break;\n\n    case \"K122\":\n      color = \"#2da72a\";\n      break;\n\n    case \"K123\":\n      color = \"#2da72a\";\n      break;\n    // psychiatrische klinik\n\n    case \"K211\":\n      color = \"#2a8ea7\";\n      break;\n\n    case \"K212\":\n      color = \"#2a8ea7\";\n      break;\n    // rehaklinik\n\n    case \"K221\":\n      color = \"#2d2aa7\";\n      break;\n    // spezialklinik\n\n    default:\n      color = \"#762aa7\";\n      break;\n  }\n\n  return color;\n}","map":{"version":3,"sources":["/Users/moriarty/Documents/UniBe/PSE/medlandscape/medlandscape-app/src/utils.mjs"],"names":["numberFormat","number","nmbr","Math","round","str","toString","index","indexOf","length","substring","pearsonCorrelation","x","y","n","sum_X","sum_Y","sum_XY","squareSum_X","squareSum_Y","i","r","sqrt","NaN","calculateCircleColor","item","year","color","attributes"],"mappings":"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","sourcesContent":["/**\n* utils.mjs\n* utility functions to be used all over the app\n**/\n\n/**\n* rounding a number to 2 decimals and add \" ' \" for big numbers\n* @param {number} number to be formatted\n* @return {string} the formatted string\n**/\nexport function numberFormat(number){\n    if(typeof number !== \"number\")\n        return number;\n    let nmbr = Math.round(number*100)/100;\n    let str = nmbr.toString();\n    let index;\n    index = str.indexOf(\".\");\n    if (index = str.indexOf(\".\") === -1){\n        index = str.length;\n    }\n    while (index > 3){\n        index -= 3;\n        str = str.substring(0, index) + \"'\" + str.substring(index, str.length);\n    }\n    return str;\n}\n\n/**\n* calculate pearson correlation between two given data arrays\n* @param {Array} x first data array\n* @param {Array} y second data array\n* @return {number} the pearson correlation\n**/\nexport function pearsonCorrelation(x, y) {\n    let n = x.length;\n    let sum_X = 0, sum_Y = 0, sum_XY = 0;\n    let squareSum_X = 0, squareSum_Y = 0;\n\n    for (let i = 0; i < n; i++) {\n        // sum of elements of array X.\n        sum_X = sum_X + x[i];\n\n        // sum of elements of array Y.\n        sum_Y = sum_Y + y[i];\n\n        // sum of X[i] * Y[i].\n        sum_XY = sum_XY + x[i] * y[i];\n\n        // sum of square of array elements.\n        squareSum_X = squareSum_X + x[i] * x[i];\n        squareSum_Y = squareSum_Y + y[i] * y[i];\n    }\n\n    // use formula for calculating correlation coefficient r.\n    let r = (n * sum_XY - sum_X * sum_Y)/\n                (Math.sqrt((n * squareSum_X -\n                sum_X * sum_X) * (n * squareSum_Y -\n                sum_Y * sum_Y)));\n\n    r = Math.round(r*1000)/1000;\n\n    if (r === NaN) {\n        r = \"-\";\n    }\n\n    return r;\n}\n\n/**\n * Calculates and returns a rgb color\n * @return {String} The rgb color as a string.\n */\nexport function calculateCircleColor(item, year){\n    let color;\n    switch (item.attributes[\"Typ\"][year]) {\n        // unispital\n        case (\"K111\"):\n            color = \"#a72a2a\";\n            break;\n        // allgemeinspital zentrumsversorgung\n        case (\"K112\"):\n            color = \"#a79f2a\";\n            break;\n        // allgemeinspital grundversorgung\n        case (\"K121\"):\n            color = \"#2da72a\";\n            break;\n        case (\"K122\"):\n            color = \"#2da72a\";\n            break;\n        case (\"K123\"):\n            color = \"#2da72a\";\n            break;\n        // psychiatrische klinik\n        case (\"K211\"):\n            color = \"#2a8ea7\";\n            break;\n        case (\"K212\"):\n            color = \"#2a8ea7\";\n            break;\n        // rehaklinik\n        case (\"K221\"):\n            color = \"#2d2aa7\";\n            break;\n        // spezialklinik\n        default :\n            color = \"#762aa7\";\n            break;\n    }\n    return color;\n}\n"]},"metadata":{},"sourceType":"module"}