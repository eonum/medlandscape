{"ast":null,"code":"import _classCallCheck from \"/Users/moriarty/Documents/UniBe/PSE/medlandscape/medlandscape-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/moriarty/Documents/UniBe/PSE/medlandscape/medlandscape-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/moriarty/Documents/UniBe/PSE/medlandscape/medlandscape-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/moriarty/Documents/UniBe/PSE/medlandscape/medlandscape-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/moriarty/Documents/UniBe/PSE/medlandscape/medlandscape-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/moriarty/Documents/UniBe/PSE/medlandscape/medlandscape-app/src/components/Maps/Maps.js\";\nimport React, { Component } from 'react';\nimport { Map, TileLayer, ZoomControl } from 'react-leaflet';\nimport './Maps.css';\nimport Control from 'react-leaflet-control';\nimport MapInfo from '../MapInfo/MapInfo.js';\nimport TestComponent from './TestComponent.js';\nimport HospitalMap from './HospitalMap.js';\nimport CantonMap from './CantonMap.js';\n/**\n* Maps is the entity we use to draw a map.\n* The rendered JSX also consists of the buttons and mapInfo that should be rendered.\n* The current position of the map center and zoom are stored in the state.\n*/\n\nvar Maps =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Maps, _Component);\n\n  function Maps() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Maps);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Maps)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      lat: 46.798473,\n      lng: 8.231726,\n      zoom: 8\n      /**\n          * Returns the values stored in a this.props.objects canton/hospital\n          * @param  {Canton || Hospital Object} item The object to extract the values from\n          * @return {int || float} The selected entry in the item.values object\n          */\n\n    };\n\n    _this.returnData = function (item) {\n      var varName = _this.props.variableInfo.name;\n      var values = item.attributes[varName];\n      var data = values[_this.props.year];\n      return data;\n    };\n\n    _this.setMaxAndMin = function () {\n      var min = 1000000000000,\n          max = 0,\n          sum = 0,\n          counter = 0;\n\n      _this.props.objects.map(function (obj) {\n        var val = _this.returnData(obj);\n\n        if (val === 0) {//console.log(obj.name + \" has value of 0.\");\n        }\n\n        if (obj.name !== \"Ganze Schweiz\") {\n          max = max < val ? val : max;\n          min = min > val ? val : min;\n          sum += val;\n          counter++;\n        }\n      });\n\n      var mean = sum / counter;\n      sum = 0;\n\n      _this.props.objects.map(function (obj) {\n        var val = _this.returnData(obj);\n\n        if (obj.name !== \"Ganze Schweiz\") {\n          var squareDif = Math.pow(val - mean, 2);\n          sum += squareDif;\n        }\n      });\n\n      var meanSquareDif = sum / counter;\n      var std = Math.sqrt(meanSquareDif);\n      return {\n        mean: mean,\n        std: std,\n        max: max,\n        min: min\n      };\n    };\n\n    _this.isNormable = function () {\n      var type = _this.props.variableInfo.variable_type;\n      return type === \"float\" || type === \"number\" || type === \"percentage\" || type === \"relevance\";\n    };\n\n    _this.resetView = function () {\n      _this.setState({\n        lat: 46.798473 + 0.1 * Math.random(),\n        lng: 8.231726 + 0.1 * Math.random(),\n        zoom: 8\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Maps, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var ready = this.props.hasLoaded && this.isNormable();\n      var componentToRender = null;\n      var mapInfo = null;\n\n      if (ready && this.props.view === 1) {\n        mapInfo = React.createElement(MapInfo, {\n          year: this.props.year,\n          selectedVariable: this.props.variableInfo,\n          nrOfObjects: this.props.objects.length,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105\n          },\n          __self: this\n        });\n        componentToRender = this.props.variableInfo.variable_model === \"Canton\" ? React.createElement(CantonMap, {\n          data: this.props.objects,\n          returnData: this.returnData,\n          maxAndMin: this.setMaxAndMin(),\n          variableInfo: this.props.variableInfo,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 113\n          },\n          __self: this\n        }) : React.createElement(HospitalMap, {\n          data: this.props.objects,\n          returnData: this.returnData,\n          maxAndMin: this.setMaxAndMin(),\n          variableInfo: this.props.variableInfo,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 121\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(Map // set up map\n      , {\n        className: \"map\",\n        center: [this.state.lat, this.state.lng],\n        zoom: this.state.zoom,\n        minZoom: 8 // set minimum zoom level\n        ,\n        maxZoom: 16 // set maximum zoom level\n        ,\n        zoomControl: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, React.createElement(ZoomControl, {\n        style: \"borderRadius=25px;\",\n        position: \"topright\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }), React.createElement(Control, {\n        position: \"topright\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        id: \"rV\",\n        className: \"resetView\",\n        onClick: function onClick() {\n          return _this2.resetView();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      })), React.createElement(TileLayer // add background layer\n      , {\n        attribution: \"&copy <a href=\\\"http://osm.org/copyright\\\">OpenStreetMap</a> contributors\",\n        url: \"https://api.mapbox.com/styles/v1/nathi/cjf8cggx93p3u2qrqrgwoh5nh/tiles/256/{z}/{x}/{y}?access_token=pk.eyJ1IjoibmF0aGkiLCJhIjoiY2pmOGJ4ZXJmMXMyZDJ4bzRoYWRxbzhteCJ9.x2dbGjsVZTA9HLw6VWaQow\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }), mapInfo, componentToRender);\n    }\n  }]);\n\n  return Maps;\n}(Component);\n\nexport default Maps;","map":{"version":3,"sources":["/Users/moriarty/Documents/UniBe/PSE/medlandscape/medlandscape-app/src/components/Maps/Maps.js"],"names":["React","Component","Map","TileLayer","ZoomControl","Control","MapInfo","TestComponent","HospitalMap","CantonMap","Maps","state","lat","lng","zoom","returnData","item","varName","props","variableInfo","name","values","attributes","data","year","setMaxAndMin","min","max","sum","counter","objects","map","obj","val","mean","squareDif","Math","pow","meanSquareDif","std","sqrt","isNormable","type","variable_type","resetView","setState","random","ready","hasLoaded","componentToRender","mapInfo","view","length","variable_model"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { Map, TileLayer, ZoomControl } from 'react-leaflet'\nimport './Maps.css';\nimport Control from 'react-leaflet-control';\nimport MapInfo from '../MapInfo/MapInfo.js';\nimport TestComponent from './TestComponent.js';\nimport HospitalMap from './HospitalMap.js';\nimport CantonMap from './CantonMap.js';\n\n/**\n* Maps is the entity we use to draw a map.\n* The rendered JSX also consists of the buttons and mapInfo that should be rendered.\n* The current position of the map center and zoom are stored in the state.\n*/\nclass Maps extends Component {\n\tstate = {\n\t\tlat: 46.798473,\n\t\tlng: 8.231726,\n\t\tzoom: 8,\n\t}\n\n\t/**\n     * Returns the values stored in a this.props.objects canton/hospital\n     * @param  {Canton || Hospital Object} item The object to extract the values from\n     * @return {int || float} The selected entry in the item.values object\n     */\n\treturnData = (item) => {\n        let varName = this.props.variableInfo.name;\n\t\tlet values = item.attributes[varName];\n        let data = (values[this.props.year]);\n\t\treturn data;\n\t}\n\n\t/**\n   * Iterates through this.props.objects and finds mean, standard deviation, max and min values.\n   * @return {Object} Object.min minimum, Object.max maximum, Object.mean mean, Object.std standard deviation,\n \t*/\n\tsetMaxAndMin = () => {\n        let min = 1000000000000, max = 0, sum = 0, counter = 0;\n\n        this.props.objects.map((obj) => {\n            let val = this.returnData(obj);\n            if (val === 0) {\n                //console.log(obj.name + \" has value of 0.\");\n            }\n            if (obj.name !== \"Ganze Schweiz\") {\n                max = (max < val) ? val : max;\n                min = (min > val) ? val : min;\n                sum += val;\n                counter++;\n            }\n        })\n\n        const mean = sum/counter;\n        sum = 0;\n\n        this.props.objects.map((obj) => {\n            let val = this.returnData(obj);\n            if (obj.name !== \"Ganze Schweiz\") {\n                const squareDif = Math.pow(val - mean, 2);\n                sum += squareDif;\n            }\n        })\n\n        const meanSquareDif = sum/counter;\n        const std = Math.sqrt(meanSquareDif);\n\n        return {\n            mean: mean,\n            std: std,\n            max: max,\n            min: min\n        }\n\t}\n\n\t/**\n\t* Checks if the selected Variable passed through this.props.varInfo\n\t* is normable (a number or similar).\n\t* @return {Boolean}\n\t*/\n\tisNormable = () => {\n\t\tlet type = this.props.variableInfo.variable_type;\n\t\treturn (type === \"float\" || type === \"number\" || type === \"percentage\" || type === \"relevance\");\n\t}\n\n\t/**\n\t* Resets view to original position.\n\t* Math.random is needed so react does detect a state change and re-renders.\n\t*/\n \tresetView = () => {\n\t\tthis.setState({\n\t\t\t\tlat: 46.798473 + 0.1 * Math.random(),\n\t\t\t\tlng: 8.231726 + 0.1 * Math.random(),\n\t\t\t\tzoom: 8,\n\t\t})\n\t}\n\n\trender() {\n        let ready = (this.props.hasLoaded && this.isNormable());\n        let componentToRender = null;\n        let mapInfo = null;\n\n        if (ready && this.props.view === 1) {\n            mapInfo = (\n                <MapInfo\n                    year={this.props.year}\n                    selectedVariable={this.props.variableInfo}\n                    nrOfObjects={this.props.objects.length}\n                />\n            )\n            componentToRender = (this.props.variableInfo.variable_model === \"Canton\")\n            ? (\n                <CantonMap\n                    data={this.props.objects}\n                    returnData={this.returnData}\n                    maxAndMin={this.setMaxAndMin()}\n                    variableInfo={this.props.variableInfo}\n                />\n            )\n            : (\n                <HospitalMap data={this.props.objects}\n                    returnData={this.returnData}\n                    maxAndMin={this.setMaxAndMin()}\n                    variableInfo={this.props.variableInfo}\n                />\n            );\n        }\n\n        return (\n        \t<Map // set up map\n                className=\"map\"\n        \t\tcenter={[this.state.lat, this.state.lng]}\n        \t\tzoom={this.state.zoom}\n        \t\tminZoom={8} // set minimum zoom level\n        \t\tmaxZoom={16} // set maximum zoom level\n\t\t\t\tzoomControl={false}\n        \t>\n\t\t\t\t<ZoomControl\n\t\t\t\t\tstyle=\"borderRadius=25px;\"\n\t\t\t\t\tposition=\"topright\"\n\t\t\t\t/>\n\n\t\t\t\t<Control position=\"topright\">\n\t\t\t          \t<div\n\t\t\t\t\t\t\tid=\"rV\"\n\t\t\t\t\t\t\tclassName=\"resetView\"\n\t\t\t\t\t\t\tonClick={() => this.resetView()}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t</div>\n\t\t      \t</Control>\n        \t\t<TileLayer // add background layer\n        \t\t\tattribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n        \t\t\turl=\"https://api.mapbox.com/styles/v1/nathi/cjf8cggx93p3u2qrqrgwoh5nh/tiles/256/{z}/{x}/{y}?access_token=pk.eyJ1IjoibmF0aGkiLCJhIjoiY2pmOGJ4ZXJmMXMyZDJ4bzRoYWRxbzhteCJ9.x2dbGjsVZTA9HLw6VWaQow\"\n        \t\t/>\n                {mapInfo}\n        \t\t{componentToRender}\n        \t</Map>\n        )\n\t}\n}\n\nexport default Maps;\n"]},"metadata":{},"sourceType":"module"}