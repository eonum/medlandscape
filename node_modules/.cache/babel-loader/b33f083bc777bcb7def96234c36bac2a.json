{"ast":null,"code":"import _toConsumableArray from \"/Users/moriarty/Documents/UniBe/PSE/medlandscape/medlandscape-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/moriarty/Documents/UniBe/PSE/medlandscape/medlandscape-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/moriarty/Documents/UniBe/PSE/medlandscape/medlandscape-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/moriarty/Documents/UniBe/PSE/medlandscape/medlandscape-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/moriarty/Documents/UniBe/PSE/medlandscape/medlandscape-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/moriarty/Documents/UniBe/PSE/medlandscape/medlandscape-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/moriarty/Documents/UniBe/PSE/medlandscape/medlandscape-app/src/components/Graphs/BoxPlot.js\";\nimport React, { Component } from 'react';\nimport * as d3 from \"d3\";\n/**\n* BoxPlot is the entity we use to calculate and draw a boxplot from data given as props\n*/\n\nvar BoxPlot =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(BoxPlot, _Component);\n\n  function BoxPlot() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, BoxPlot);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(BoxPlot)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.returnData = function (item) {\n      var varName = _this.props.variableInfo.name;\n      var values = item.attributes[varName];\n      var data = values[_this.props.year];\n      return data;\n    };\n\n    _this.makeDataArray = function () {\n      // sort out undefined values for given year\n      return _this.props.objects.filter(function (obj) {\n        console.log(_this.returnData(obj) !== undefined && obj.name !== \"Ganze Schweiz\");\n        return _this.returnData(obj) !== undefined && obj.name !== \"Ganze Schweiz\";\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(BoxPlot, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      // draw a chart if the variable information has been loaded via api-call\n      if (this.props.hasLoaded) this.drawChart();\n    }\n    /**\n     * Returns the values stored in a this.props.objects canton/hospital\n     * @param  {Canton || Hospital Object} item The object to extract the values from\n     * @return {int || float} The selected entry in the item.values object\n     */\n\n  }, {\n    key: \"drawChart\",\n\n    /**\n     * Draws a BoxPlot\n     */\n    value: function drawChart() {\n      d3.select(\"#boxplotsvg\").remove(); // set the dimensions and margins of the graph\n\n      var margin = {\n        top: 10,\n        right: 30,\n        bottom: 30,\n        left: 40\n      },\n          width = 400 - margin.left - margin.right,\n          height = 400 - margin.top - margin.bottom; // append the svg object to the body of the page\n\n      var svg = d3.select(\"#boxplot\").append(\"svg\").attr(\"width\", width + margin.left + margin.right).attr(\"height\", height + margin.top + margin.bottom).append(\"g\").attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\"); // create dummy data\n\n      var data = this.makeDataArray();\n      console.log(data); //data = [12,19,11,13,12,22,13,4,15,16,18,19,20,12,11,9];\n\n      var minVal = Math.min.apply(Math, _toConsumableArray(data));\n      var maxVal = Math.max.apply(Math, _toConsumableArray(data)); // Compute summary statistics used for the box:\n\n      var data_sorted = data.sort(d3.ascending);\n      var q1 = d3.quantile(data_sorted, .25);\n      var median = d3.quantile(data_sorted, .5);\n      var q3 = d3.quantile(data_sorted, .75); //var interQuantileRange = q3 - q1\n\n      var min = minVal; //q1 - 1.5 * interQuantileRange\n\n      var max = maxVal; //q1 + 1.5 * interQuantileRange\n      // Show the Y scale\n\n      var y = d3.scaleLinear().domain([minVal - 0.5 * median, maxVal + 0.5 * median]).range([height, 0]);\n      svg.call(d3.axisLeft(y).ticks(20, \"s\")); // a few features for the box\n\n      var center = 200;\n      var width2 = 100;\n      var tooltip = d3.select(\"#boxplot\").append(\"div\").style(\"opacity\", 0).attr(\"class\", \"tooltip\");\n\n      var mouseover = function mouseover(d) {\n        d3.select(\"#boxplot .tooltip\").style(\"opacity\", 1).text(\"Median: \" + median);\n      };\n\n      var mousemove = function mousemove(d) {\n        d3.select(\"#boxplot .tooltip\").style(\"left\", d3.event.pageX + \"px\").style(\"top\", d3.event.pageY - 28 + \"px\");\n      };\n\n      var mouseleave = function mouseleave(d) {\n        d3.select(\"#boxplot .tooltip\").transition().duration(200).style(\"opacity\", 0);\n      }; // Show the main vertical line\n\n\n      svg.append(\"line\").attr(\"x1\", center).attr(\"x2\", center).attr(\"y1\", y(min)).attr(\"y2\", y(max)).attr(\"stroke\", \"black\").on(\"mouseover\", mouseover).on(\"mousemove\", mousemove).on(\"mouseleave\", mouseleave); // Show the box\n\n      svg.append(\"rect\").attr(\"x\", center - width2 / 2).attr(\"y\", y(q3)).attr(\"height\", y(q1) - y(q3)).attr(\"width\", width2).attr(\"stroke\", \"black\").style(\"fill\", \"#69b3a2\").on(\"mouseover\", mouseover).on(\"mousemove\", mousemove).on(\"mouseleave\", mouseleave); // show median, min and max horizontal lines\n\n      svg.selectAll(\"toto\").data([min, median, max]).enter().append(\"line\").attr(\"x1\", center - width2 / 2).attr(\"x2\", center + width2 / 2).attr(\"y1\", function (d) {\n        return y(d);\n      }).attr(\"y2\", function (d) {\n        return y(d);\n      }).attr(\"stroke\", \"black\").on(\"mouseover\", mouseover).on(\"mousemove\", mousemove).on(\"mouseleave\", mouseleave);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        id: \"boxplot\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return BoxPlot;\n}(Component);\n\nexport default BoxPlot;","map":{"version":3,"sources":["/Users/moriarty/Documents/UniBe/PSE/medlandscape/medlandscape-app/src/components/Graphs/BoxPlot.js"],"names":["React","Component","d3","BoxPlot","returnData","item","varName","props","variableInfo","name","values","attributes","data","year","makeDataArray","objects","filter","obj","console","log","undefined","hasLoaded","drawChart","select","remove","margin","top","right","bottom","left","width","height","svg","append","attr","minVal","Math","min","maxVal","max","data_sorted","sort","ascending","q1","quantile","median","q3","y","scaleLinear","domain","range","call","axisLeft","ticks","center","width2","tooltip","style","mouseover","d","text","mousemove","event","pageX","pageY","mouseleave","transition","duration","on","selectAll","enter"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport * as d3 from \"d3\";\n\n/**\n* BoxPlot is the entity we use to calculate and draw a boxplot from data given as props\n*/\nclass BoxPlot extends Component {\n\n\tcomponentDidMount(){\n\t\t// draw a chart if the variable information has been loaded via api-call\n\t\tif (this.props.hasLoaded)\n\t\t\tthis.drawChart();\n\t}\n\n\t/**\n\t * Returns the values stored in a this.props.objects canton/hospital\n\t * @param  {Canton || Hospital Object} item The object to extract the values from\n\t * @return {int || float} The selected entry in the item.values object\n\t */\n\treturnData = (item) => {\n\t\tlet varName = this.props.variableInfo.name;\n\t\tlet values = item.attributes[varName];\n\t\tlet data = (values[this.props.year]);\n\t\treturn data;\n\t}\n\n\t/**\n\t * Returns an Array where all defined values for given year are stored\n\t * This needed to sort the values and draw the boxplot\n\t * @return {array} dataArray\n\t */\n\tmakeDataArray = () => {\n\t\t// sort out undefined values for given year\n\t\treturn this.props.objects.filter((obj) => {\n\t\t\tconsole.log(this.returnData(obj) !== undefined && obj.name !== \"Ganze Schweiz\");\n\t\t\treturn (this.returnData(obj) !== undefined && obj.name !== \"Ganze Schweiz\");\n\t\t})\n\t}\n\n\t/**\n\t * Draws a BoxPlot\n\t */\n\tdrawChart() {\n\t\td3.select(\"#boxplotsvg\").remove();\n\t\t// set the dimensions and margins of the graph\n\t\tvar margin = {top: 10, right: 30, bottom: 30, left: 40},\n\t\t\twidth = 400 - margin.left - margin.right,\n\t\t\theight = 400 - margin.top - margin.bottom;\n\n\t\t// append the svg object to the body of the page\n\t\tvar svg = d3.select(\"#boxplot\")\n\t\t\t.append(\"svg\")\n\t\t\t.attr(\"width\", width + margin.left + margin.right)\n\t\t\t.attr(\"height\", height + margin.top + margin.bottom)\n\t\t\t.append(\"g\")\n\t\t\t.attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n\t\t// create dummy data\n\t\tlet data = this.makeDataArray();\n\t\tconsole.log(data);\n\t\t//data = [12,19,11,13,12,22,13,4,15,16,18,19,20,12,11,9];\n\t\tlet minVal = Math.min(...data);\n\t\tlet maxVal = Math.max(...data);\n\n\n\t\t// Compute summary statistics used for the box:\n\t\tvar data_sorted = data.sort(d3.ascending)\n\t\tvar q1 = d3.quantile(data_sorted, .25)\n\t\tvar median = d3.quantile(data_sorted, .5)\n\t\tvar q3 = d3.quantile(data_sorted, .75)\n\t\t//var interQuantileRange = q3 - q1\n\t\tvar min = minVal //q1 - 1.5 * interQuantileRange\n\t\tvar max = maxVal //q1 + 1.5 * interQuantileRange\n\n\n\t\t// Show the Y scale\n\t\tvar y = d3.scaleLinear()\n\t\t\t.domain([minVal - 0.5 * median,maxVal +0.5 * median ])\n\t\t\t.range([height, 0])\n\t\tsvg.call(d3.axisLeft(y).ticks(20, \"s\"))\n\n\t\t// a few features for the box\n\t\tvar center = 200\n\t\tvar width2 = 100\n\n\n\t\tvar tooltip = d3.select(\"#boxplot\")\n\t\t\t.append(\"div\")\n\t\t\t.style(\"opacity\", 0)\n\t\t\t.attr(\"class\", \"tooltip\")\n\n\t\tvar mouseover = function(d) {\n\t\t\td3.select(\"#boxplot .tooltip\").style(\"opacity\", 1)\n\t\t\t.text(\"Median: \" + median);\n\t\t}\n\n\t\tvar mousemove = function(d) {\n\t\t\td3.select(\"#boxplot .tooltip\")\n\t\t\t\t.style(\"left\", (d3.event.pageX) + \"px\")\n\t\t\t\t.style(\"top\", (d3.event.pageY - 28) + \"px\");\n\t\t}\n\n\t\tvar mouseleave = function(d) {\n\t\t\td3.select(\"#boxplot .tooltip\").transition()\n\t\t\t\t.duration(200)\n\t\t\t\t.style(\"opacity\", 0)\n\t\t}\n\n\n\t\t// Show the main vertical line\n\t\tsvg.append(\"line\")\n\t\t\t.attr(\"x1\", center)\n\t\t\t.attr(\"x2\", center)\n\t\t\t.attr(\"y1\", y(min) )\n\t\t\t.attr(\"y2\", y(max) )\n\t\t\t.attr(\"stroke\", \"black\")\n\t\t\t.on(\"mouseover\", mouseover)\n\t\t\t.on(\"mousemove\", mousemove)\n\t\t\t.on(\"mouseleave\", mouseleave)\n\n\t\t// Show the box\n\t\tsvg.append(\"rect\")\n\t\t\t.attr(\"x\", center - width2/2)\n\t\t\t.attr(\"y\", y(q3) )\n\t\t\t.attr(\"height\", (y(q1)-y(q3)) )\n\t\t\t.attr(\"width\", width2 )\n\t\t\t.attr(\"stroke\", \"black\")\n\t\t\t.style(\"fill\", \"#69b3a2\")\n\t\t\t.on(\"mouseover\", mouseover)\n\t\t\t.on(\"mousemove\", mousemove)\n\t\t\t.on(\"mouseleave\", mouseleave)\n\n\t\t// show median, min and max horizontal lines\n\t\tsvg.selectAll(\"toto\")\n\t\t\t.data([min, median, max])\n\t\t\t.enter()\n\t\t\t.append(\"line\")\n\t\t\t.attr(\"x1\", center-width2/2)\n\t\t\t.attr(\"x2\", center+width2/2)\n\t\t\t.attr(\"y1\", function(d){ return(y(d))} )\n\t\t\t.attr(\"y2\", function(d){ return(y(d))} )\n\t\t\t.attr(\"stroke\", \"black\")\n\t\t\t.on(\"mouseover\", mouseover)\n\t\t\t.on(\"mousemove\", mousemove)\n\t\t\t.on(\"mouseleave\", mouseleave)\n\t}\n\n\trender() {\n\t\treturn (\n        \t<div id=\"boxplot\"></div>\n        )\n\t}\n}\n\nexport default BoxPlot;\n"]},"metadata":{},"sourceType":"module"}