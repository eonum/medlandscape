{"ast":null,"code":"import _classCallCheck from \"/Users/moriarty/Documents/UniBe/PSE/medlandscape/medlandscape-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/moriarty/Documents/UniBe/PSE/medlandscape/medlandscape-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/moriarty/Documents/UniBe/PSE/medlandscape/medlandscape-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/moriarty/Documents/UniBe/PSE/medlandscape/medlandscape-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/moriarty/Documents/UniBe/PSE/medlandscape/medlandscape-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/moriarty/Documents/UniBe/PSE/medlandscape/medlandscape-app/src/components/HospitalTypeFilter/HospitalTypeFilter.js\";\nimport React, { Component } from 'react';\nimport CheckboxList from '../CheckboxList/CheckboxList.js';\n\nvar HospitalTypeFilter =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(HospitalTypeFilter, _Component);\n\n  function HospitalTypeFilter() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, HospitalTypeFilter);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(HospitalTypeFilter)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      selectedValues: []\n    };\n\n    _this.checkboxSelectItem = function (item) {\n      // removes item if in selectedValues\n      var values = _this.state.selectedValues.filter(function (value) {\n        return value !== item;\n      }); // adds item if not in selectedValues\n\n\n      if (values.length === _this.state.selectedValues.length) {\n        values.push(item);\n      } // categories for different hospitals\n      // University: K111\n      // Allgemeinspital, Zentrumversorgung: K112\n      // Allgemeinspital, Grundversorgung: K121, K122, K123\n      // Psychiatrische Klinik: K211, K212\n      // Rehabilitationsklinik: K221\n      // Spezialklinik: K231, K232, K233, K234, K235\n\n\n      var apiValues = [];\n\n      for (var i = 0; i < values.length; i++) {\n        switch (values[i]) {\n          case \"Universitätsspital\":\n            apiValues.push(\"K111\");\n            break;\n\n          case \"Allgemeinspital, Zentrumversorgung\":\n            apiValues.push(\"K112\");\n            break;\n\n          case \"Allgemeinspital, Grundversorgung\":\n            apiValues.push(\"K121\");\n            apiValues.push(\"K122\");\n            apiValues.push(\"K123\");\n            break;\n\n          case \"Psychiatrische Klinik\":\n            apiValues.push(\"K211\");\n            apiValues.push(\"K212\");\n            break;\n\n          case \"Rehabilitationsklinik\":\n            apiValues.push(\"K221\");\n            break;\n\n          case \"Spezialklinik\":\n            apiValues.push(\"K231\");\n            apiValues.push(\"K232\");\n            apiValues.push(\"K233\");\n            apiValues.push(\"K234\");\n            apiValues.push(\"K235\");\n            break;\n        }\n      }\n\n      _this.setState({\n        selectedValues: values\n      });\n\n      _this.props.setSelectedHospitalTypes(apiValues);\n\n      _this.filter(apiValues);\n    };\n\n    _this.filter = function (selectedValues) {\n      var _this$props = _this.props,\n          selectedYear = _this$props.selectedYear,\n          hospitals = _this$props.hospitals;\n      var name = \"Typ\";\n      var filteredHospitals = [];\n\n      if (selectedValues.length > 0) {\n        filteredHospitals = hospitals.filter(function (hospital) {\n          var counter = 0;\n\n          if (selectedYear in hospital.attributes[name]) {\n            var values = hospital.attributes[name][selectedYear];\n\n            for (var i = 0; i < selectedValues.length; i++) {\n              if (values.includes(selectedValues[i])) {\n                counter++;\n              }\n            }\n          }\n\n          if (counter === 0) {\n            return false;\n          }\n\n          return true;\n        });\n      }\n\n      _this.props.filter(filteredHospitals);\n    };\n\n    return _this;\n  }\n\n  _createClass(HospitalTypeFilter, [{\n    key: \"componentWillRecieveProps\",\n    value: function componentWillRecieveProps(nextProps) {\n      if (nextProps.hospitals[0].attributes.length !== this.props.hospitals[0].attributes.length) {\n        console.log();\n        this.filter(this.state.selectedValues);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var categorizedHospitalTypes = [\"Universitätsspital\", \"Allgemeinspital, Zentrumversorgung\", \"Allgemeinspital, Grundversorgung\", \"Psychiatrische Klinik\", \"Rehabilitationsklinik\", \"Spezialklinik\"];\n      return React.createElement(CheckboxList, {\n        items: categorizedHospitalTypes,\n        checkboxSelectItem: this.checkboxSelectItem,\n        titles: categorizedHospitalTypes,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return HospitalTypeFilter;\n}(Component);\n\nexport default HospitalTypeFilter;","map":{"version":3,"sources":["/Users/moriarty/Documents/UniBe/PSE/medlandscape/medlandscape-app/src/components/HospitalTypeFilter/HospitalTypeFilter.js"],"names":["React","Component","CheckboxList","HospitalTypeFilter","state","selectedValues","checkboxSelectItem","item","values","filter","value","length","push","apiValues","i","setState","props","setSelectedHospitalTypes","selectedYear","hospitals","name","filteredHospitals","hospital","counter","attributes","includes","nextProps","console","log","categorizedHospitalTypes"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,YAAP,MAAyB,iCAAzB;;IAEMC,kB;;;;;;;;;;;;;;;;;UAEFC,K,GAAQ;AACJC,MAAAA,cAAc,EAAG;AADb,K;;UAKRC,kB,GAAqB,UAACC,IAAD,EAAU;AAE3B;AACA,UAAIC,MAAM,GAAG,MAAKJ,KAAL,CAAWC,cAAX,CAA0BI,MAA1B,CAAiC,UAACC,KAAD,EAAW;AACrD,eAAQA,KAAK,KAAKH,IAAlB;AACH,OAFY,CAAb,CAH2B,CAO3B;;;AACA,UAAIC,MAAM,CAACG,MAAP,KAAkB,MAAKP,KAAL,CAAWC,cAAX,CAA0BM,MAAhD,EAAwD;AACpDH,QAAAA,MAAM,CAACI,IAAP,CAAYL,IAAZ;AACH,OAV0B,CAY3B;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,UAAIM,SAAS,GAAG,EAAhB;;AAEA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGN,MAAM,CAACG,MAA3B,EAAmCG,CAAC,EAApC,EAAwC;AACpC,gBAAQN,MAAM,CAACM,CAAD,CAAd;AACI,eAAM,oBAAN;AACID,YAAAA,SAAS,CAACD,IAAV,CAAe,MAAf;AACA;;AACJ,eAAM,oCAAN;AACIC,YAAAA,SAAS,CAACD,IAAV,CAAe,MAAf;AACA;;AACJ,eAAM,kCAAN;AACIC,YAAAA,SAAS,CAACD,IAAV,CAAe,MAAf;AACAC,YAAAA,SAAS,CAACD,IAAV,CAAe,MAAf;AACAC,YAAAA,SAAS,CAACD,IAAV,CAAe,MAAf;AACA;;AACJ,eAAM,uBAAN;AACIC,YAAAA,SAAS,CAACD,IAAV,CAAe,MAAf;AACAC,YAAAA,SAAS,CAACD,IAAV,CAAe,MAAf;AACA;;AACJ,eAAM,uBAAN;AACIC,YAAAA,SAAS,CAACD,IAAV,CAAe,MAAf;AACA;;AACJ,eAAM,eAAN;AACIC,YAAAA,SAAS,CAACD,IAAV,CAAe,MAAf;AACAC,YAAAA,SAAS,CAACD,IAAV,CAAe,MAAf;AACAC,YAAAA,SAAS,CAACD,IAAV,CAAe,MAAf;AACAC,YAAAA,SAAS,CAACD,IAAV,CAAe,MAAf;AACAC,YAAAA,SAAS,CAACD,IAAV,CAAe,MAAf;AACA;AAzBR;AA2BH;;AAED,YAAKG,QAAL,CAAc;AACVV,QAAAA,cAAc,EAAGG;AADP,OAAd;;AAIA,YAAKQ,KAAL,CAAWC,wBAAX,CAAoCJ,SAApC;;AAEA,YAAKJ,MAAL,CAAYI,SAAZ;AACH,K;;UASDJ,M,GAAS,UAACJ,cAAD,EAAoB;AAAA,wBACG,MAAKW,KADR;AAAA,UACxBE,YADwB,eACxBA,YADwB;AAAA,UACVC,SADU,eACVA,SADU;AAEzB,UAAMC,IAAI,GAAG,KAAb;AAEA,UAAIC,iBAAiB,GAAG,EAAxB;;AAEA,UAAIhB,cAAc,CAACM,MAAf,GAAwB,CAA5B,EAA+B;AAC3BU,QAAAA,iBAAiB,GAAGF,SAAS,CAACV,MAAV,CAAiB,UAACa,QAAD,EAAc;AAC/C,cAAIC,OAAO,GAAG,CAAd;;AACA,cAAIL,YAAY,IAAII,QAAQ,CAACE,UAAT,CAAoBJ,IAApB,CAApB,EAA+C;AAC3C,gBAAMZ,MAAM,GAAGc,QAAQ,CAACE,UAAT,CAAoBJ,IAApB,EAA0BF,YAA1B,CAAf;;AACA,iBAAK,IAAIJ,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGT,cAAc,CAACM,MAAnC,EAA2CG,CAAC,EAA5C,EAAgD;AAC5C,kBAAIN,MAAM,CAACiB,QAAP,CAAgBpB,cAAc,CAACS,CAAD,CAA9B,CAAJ,EAAwC;AACpCS,gBAAAA,OAAO;AACV;AACJ;AACJ;;AACD,cAAIA,OAAO,KAAK,CAAhB,EAAmB;AACf,mBAAO,KAAP;AACH;;AACD,iBAAO,IAAP;AACH,SAdmB,CAApB;AAeH;;AAED,YAAKP,KAAL,CAAWP,MAAX,CAAkBY,iBAAlB;AACH,K;;;;;;;8CAhCyBK,S,EAAW;AACjC,UAAIA,SAAS,CAACP,SAAV,CAAoB,CAApB,EAAuBK,UAAvB,CAAkCb,MAAlC,KAA6C,KAAKK,KAAL,CAAWG,SAAX,CAAqB,CAArB,EAAwBK,UAAxB,CAAmCb,MAApF,EAA4F;AACxFgB,QAAAA,OAAO,CAACC,GAAR;AACA,aAAKnB,MAAL,CAAY,KAAKL,KAAL,CAAWC,cAAvB;AACH;AACJ;;;6BA6BQ;AACL,UAAIwB,wBAAwB,GAAG,CAAC,oBAAD,EAAuB,oCAAvB,EAA6D,kCAA7D,EAAiG,uBAAjG,EAA0H,uBAA1H,EAAmJ,eAAnJ,CAA/B;AAEA,aACI,oBAAC,YAAD;AAAc,QAAA,KAAK,EAAEA,wBAArB;AAA+C,QAAA,kBAAkB,EAAE,KAAKvB,kBAAxE;AAA4F,QAAA,MAAM,EAAEuB,wBAApG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ;AAGH;;;;EA7G4B5B,S;;AAgHjC,eAAeE,kBAAf","sourcesContent":["import React, { Component } from 'react';\nimport CheckboxList from '../CheckboxList/CheckboxList.js';\n\nclass HospitalTypeFilter extends Component {\n\n    state = {\n        selectedValues : []\n    }\n\n\n    checkboxSelectItem = (item) => {\n\n        // removes item if in selectedValues\n        let values = this.state.selectedValues.filter((value) => {\n            return (value !== item)\n        });\n\n        // adds item if not in selectedValues\n        if (values.length === this.state.selectedValues.length) {\n            values.push(item);\n        }\n\n        // categories for different hospitals\n        // University: K111\n        // Allgemeinspital, Zentrumversorgung: K112\n        // Allgemeinspital, Grundversorgung: K121, K122, K123\n        // Psychiatrische Klinik: K211, K212\n        // Rehabilitationsklinik: K221\n        // Spezialklinik: K231, K232, K233, K234, K235\n\n\n        let apiValues = [];\n\n        for (let i = 0; i < values.length; i++) {\n            switch (values[i]) {\n                case (\"Universitätsspital\"):\n                    apiValues.push(\"K111\");\n                    break;\n                case (\"Allgemeinspital, Zentrumversorgung\"):\n                    apiValues.push(\"K112\");\n                    break;\n                case (\"Allgemeinspital, Grundversorgung\"):\n                    apiValues.push(\"K121\");\n                    apiValues.push(\"K122\");\n                    apiValues.push(\"K123\");\n                    break;\n                case (\"Psychiatrische Klinik\"):\n                    apiValues.push(\"K211\");\n                    apiValues.push(\"K212\");\n                    break;\n                case (\"Rehabilitationsklinik\"):\n                    apiValues.push(\"K221\");\n                    break;\n                case (\"Spezialklinik\"):\n                    apiValues.push(\"K231\");\n                    apiValues.push(\"K232\");\n                    apiValues.push(\"K233\");\n                    apiValues.push(\"K234\");\n                    apiValues.push(\"K235\");\n                    break;\n            }\n        }\n\n        this.setState({\n            selectedValues : values\n        })\n\n        this.props.setSelectedHospitalTypes(apiValues);\n\n        this.filter(apiValues);\n    }\n\n    componentWillRecieveProps(nextProps) {\n        if (nextProps.hospitals[0].attributes.length !== this.props.hospitals[0].attributes.length) {\n            console.log();\n            this.filter(this.state.selectedValues);\n        }\n    }\n\n    filter = (selectedValues) => {\n\t\tconst {selectedYear, hospitals} = this.props;\n        const name = \"Typ\"\n\n        let filteredHospitals = [];\n\n        if (selectedValues.length > 0) {\n            filteredHospitals = hospitals.filter((hospital) => {\n                let counter = 0;\n                if (selectedYear in hospital.attributes[name]) {\n                    const values = hospital.attributes[name][selectedYear];\n                    for (let i = 0; i < selectedValues.length; i++) {\n                        if (values.includes(selectedValues[i])) {\n                            counter++;\n                        }\n                    }\n                }\n                if (counter === 0) {\n                    return false;\n                }\n                return true;\n            });\n        }\n\n        this.props.filter(filteredHospitals);\n    }\n\n    render() {\n        let categorizedHospitalTypes = [\"Universitätsspital\", \"Allgemeinspital, Zentrumversorgung\", \"Allgemeinspital, Grundversorgung\", \"Psychiatrische Klinik\", \"Rehabilitationsklinik\", \"Spezialklinik\"];\n\n        return (\n            <CheckboxList items={categorizedHospitalTypes} checkboxSelectItem={this.checkboxSelectItem} titles={categorizedHospitalTypes}/>\n        )\n    }\n}\n\nexport default HospitalTypeFilter;\n"]},"metadata":{},"sourceType":"module"}