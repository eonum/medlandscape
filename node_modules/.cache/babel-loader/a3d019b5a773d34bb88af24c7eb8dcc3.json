{"ast":null,"code":"import _classCallCheck from \"/Users/moriarty/Documents/UniBe/PSE/medlandscape/medlandscape-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/moriarty/Documents/UniBe/PSE/medlandscape/medlandscape-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/moriarty/Documents/UniBe/PSE/medlandscape/medlandscape-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/moriarty/Documents/UniBe/PSE/medlandscape/medlandscape-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/moriarty/Documents/UniBe/PSE/medlandscape/medlandscape-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/moriarty/Documents/UniBe/PSE/medlandscape/medlandscape-app/src/components/Maps/Maps.js\";\nimport React, { Component } from 'react';\nimport { Map, TileLayer, ZoomControl } from 'react-leaflet';\nimport './Maps.css';\nimport Control from 'react-leaflet-control';\nimport MapInfo from './MapInfo/MapInfo.js';\nimport HospitalMap from './HospitalMap/HospitalMap.js';\nimport CantonMap from './CantonMap/CantonMap.js';\n/**\n* Maps is the entity we use to draw a map.\n* The rendered JSX also consists of the buttons and mapInfo that should be rendered.\n* The current position of the map center and zoom are stored in the state.\n*/\n\nvar Maps =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Maps, _Component);\n\n  function Maps() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Maps);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Maps)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      lat: 46.798473,\n      lng: 7.7,\n      zoom: 8\n    };\n\n    _this.filterObjects = function () {\n      return _this.props.objects.filter(function (object) {\n        return _this.returnData(object) !== \"noValue\";\n      });\n    };\n\n    _this.returnData = function (item) {\n      var varName = _this.props.selectedVariable.name;\n      var values = item.attributes[varName];\n      var data;\n\n      if (values !== undefined || values !== null) {\n        data = values[_this.props.year] ? values[_this.props.year] : \"noValue\";\n      } else {\n        data = \"noVariable\";\n      }\n\n      return data;\n    };\n\n    _this.setMaxAndMin = function (objects) {\n      var min = 1000000000000,\n          max = 0; //sum = 0, counter = 0;\n\n      objects.forEach(function (obj) {\n        var val = _this.returnData(obj);\n\n        if (obj.name !== \"Ganze Schweiz\") {\n          max = max < val ? val : max;\n          min = min > val ? val : min; // sum += val;\n          // counter++;\n        }\n      });\n      return {\n        // mean: mean,\n        // std: std,\n        max: max,\n        min: min // const mean = sum/counter;\n        // sum = 0;\n        //\n        // objects.map((obj) => {\n        //     let val = this.returnData(obj);\n        //     if (obj.name !== \"Ganze Schweiz\") {\n        //         const squareDif = Math.pow(val - mean, 2);\n        //         sum += squareDif;\n        //     }\n        // })\n        //\n        // const meanSquareDif = sum/counter;\n        // const std = Math.sqrt(meanSquareDif);\n\n      };\n    };\n\n    _this.isNormable = function () {\n      var type = _this.props.selectedVariable.variable_type;\n      return type === \"float\" || type === \"number\" || type === \"percentage\" || type === \"relevance\";\n    };\n\n    _this.resetView = function () {\n      _this.setState({\n        lat: 46.798473 + 0.001 * Math.random(),\n        lng: 7.7,\n        zoom: 8\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Maps, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          selectedVariable = _this$props.selectedVariable,\n          view = _this$props.view,\n          mapView = _this$props.mapView,\n          year = _this$props.year,\n          hasLoaded = _this$props.hasLoaded;\n      var _this$state = this.state,\n          lat = _this$state.lat,\n          lng = _this$state.lng,\n          zoom = _this$state.zoom;\n      var mapInfo = null;\n      var componentToRender = null;\n\n      if (view === 1) {\n        var filteredObjects = [];\n\n        if (hasLoaded) {\n          filteredObjects = this.filterObjects();\n          var maxAndMin;\n\n          if (mapView === 1) {\n            maxAndMin = this.isNormable() ? this.setMaxAndMin(filteredObjects) : 0;\n          } else {\n            maxAndMin = this.setMaxAndMin(filteredObjects);\n          }\n\n          componentToRender = mapView === 1 ? React.createElement(HospitalMap, {\n            data: filteredObjects,\n            returnData: this.returnData,\n            maxAndMin: maxAndMin,\n            selectedVariable: selectedVariable,\n            year: year,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 127\n            },\n            __self: this\n          }) : React.createElement(CantonMap, {\n            data: filteredObjects,\n            returnData: this.returnData,\n            maxAndMin: maxAndMin,\n            selectedVariable: selectedVariable,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 136\n            },\n            __self: this\n          });\n        }\n\n        mapInfo = React.createElement(MapInfo, {\n          mapView: mapView,\n          hasLoaded: hasLoaded,\n          year: year,\n          selectedVariable: selectedVariable,\n          nrOfObjects: filteredObjects.length,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 146\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(Map // set up map\n      , {\n        className: \"map\",\n        center: [lat, lng],\n        zoom: zoom,\n        minZoom: 8 // set minimum zoom level\n        ,\n        maxZoom: 16 // set maximum zoom level\n        ,\n        zoomControl: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, React.createElement(ZoomControl, {\n        style: \"borderRadius=25px;\",\n        position: \"topright\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }), React.createElement(Control, {\n        position: \"topright\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        id: \"rV\",\n        className: \"resetView\",\n        onClick: function onClick() {\n          return _this2.resetView();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      })), React.createElement(TileLayer // add background layer\n      , {\n        attribution: \"&copy <a href=\\\"http://osm.org/copyright\\\">OpenStreetMap</a> contributors\",\n        url: \"https://api.mapbox.com/styles/v1/nathi/cjf8cggx93p3u2qrqrgwoh5nh/tiles/256/{z}/{x}/{y}?access_token=pk.eyJ1IjoibmF0aGkiLCJhIjoiY2pmOGJ4ZXJmMXMyZDJ4bzRoYWRxbzhteCJ9.x2dbGjsVZTA9HLw6VWaQow\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }), mapInfo, componentToRender);\n    }\n  }]);\n\n  return Maps;\n}(Component);\n\nexport default Maps;","map":{"version":3,"sources":["/Users/moriarty/Documents/UniBe/PSE/medlandscape/medlandscape-app/src/components/Maps/Maps.js"],"names":["React","Component","Map","TileLayer","ZoomControl","Control","MapInfo","HospitalMap","CantonMap","Maps","state","lat","lng","zoom","filterObjects","props","objects","filter","object","returnData","item","varName","selectedVariable","name","values","attributes","data","undefined","year","setMaxAndMin","min","max","forEach","obj","val","isNormable","type","variable_type","resetView","setState","Math","random","view","mapView","hasLoaded","mapInfo","componentToRender","filteredObjects","maxAndMin","length"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { Map, TileLayer, ZoomControl } from 'react-leaflet'\nimport './Maps.css';\nimport Control from 'react-leaflet-control';\nimport MapInfo from './MapInfo/MapInfo.js';\nimport HospitalMap from './HospitalMap/HospitalMap.js';\nimport CantonMap from './CantonMap/CantonMap.js';\n\n/**\n* Maps is the entity we use to draw a map.\n* The rendered JSX also consists of the buttons and mapInfo that should be rendered.\n* The current position of the map center and zoom are stored in the state.\n*/\nclass Maps extends Component {\n\tstate = {\n\t\tlat : 46.798473,\n\t\tlng : 7.7,\n\t\tzoom : 8,\n\t}\n\n\tfilterObjects = () => {\n\t\treturn this.props.objects.filter((object) => {\n\t\t\treturn (this.returnData(object) !== \"noValue\");\n\t\t});\n\t}\n\n\t/**\n     * Returns the values stored in a this.props.objects canton/hospital\n     * @param  {Canton || Hospital Object} item The object to extract the values from\n     * @return {int || float || string} The selected entry in the item.values object\n     */\n\treturnData = (item) => {\n        let varName = this.props.selectedVariable.name;\n\t\tlet values = item.attributes[varName];\n\t\tlet data;\n\t\tif (values !== undefined || values !== null) {\n\t\t\tdata = (values[this.props.year]) ? values[this.props.year] : \"noValue\";\n\t\t} else {\n\t\t\tdata = \"noVariable\"\n\t\t}\n\t\treturn data;\n\t}\n\n\t/**\n   * Iterates through this.props.objects and finds mean, standard deviation, max and min values.\n   * @return {Object} Object.min minimum, Object.max maximum, Object.mean mean, Object.std standard deviation,\n \t*/\n\tsetMaxAndMin = (objects) => {\n        let min = 1000000000000, max = 0; //sum = 0, counter = 0;\n\n\t\tobjects.forEach((obj) => {\n\t\t\tlet val = this.returnData(obj);\n\t\t\tif (obj.name !== \"Ganze Schweiz\") {\n\t\t\t\tmax = (max < val) ? val : max;\n\t\t\t\tmin = (min > val) ? val : min;\n\t\t\t\t// sum += val;\n\t\t\t\t// counter++;\n\t\t\t}\n\t\t})\n\n\t\treturn {\n            // mean: mean,\n            // std: std,\n            max: max,\n            min: min\n        }\n\n        // const mean = sum/counter;\n        // sum = 0;\n\t\t//\n        // objects.map((obj) => {\n        //     let val = this.returnData(obj);\n        //     if (obj.name !== \"Ganze Schweiz\") {\n        //         const squareDif = Math.pow(val - mean, 2);\n        //         sum += squareDif;\n        //     }\n        // })\n\t\t//\n        // const meanSquareDif = sum/counter;\n        // const std = Math.sqrt(meanSquareDif);\n\n\t}\n\n\t/**\n\t* Checks if the selected Variable passed through this.props.varInfo\n\t* is normable (a number or similar).\n\t* @return {Boolean}\n\t*/\n\tisNormable = () => {\n\t\tlet type = this.props.selectedVariable.variable_type;\n\t\treturn (type === \"float\" || type === \"number\" || type === \"percentage\" || type === \"relevance\");\n\t}\n\n\t/**\n\t* Resets view to original position.\n\t* Math.random is needed so react does detect a state change and re-renders.\n\t*/\n \tresetView = () => {\n\t\tthis.setState({\n\t\t\tlat : 46.798473 + 0.001 * Math.random(),\n\t\t\tlng : 7.7,\n\t\t\tzoom : 8,\n\t\t})\n\t}\n\n\trender() {\n\t\tconst {selectedVariable, view, mapView, year, hasLoaded} = this.props;\n\t\tconst {lat, lng, zoom} = this.state;\n\n\t\tlet mapInfo = null;\n\t\tlet componentToRender = null;\n\n\n        if (view === 1) {\n\t\t\tlet filteredObjects = [];\n\t\t\tif (hasLoaded) {\n\t\t\t\tfilteredObjects = this.filterObjects();\n\t\t\t\tlet maxAndMin;\n\t\t\t\tif (mapView === 1) {\n\t\t\t\t\tmaxAndMin = (this.isNormable()) ? this.setMaxAndMin(filteredObjects) : 0;\n\t\t\t\t} else {\n\t\t\t\t\tmaxAndMin = this.setMaxAndMin(filteredObjects);\n\t\t\t\t}\n\n\t\t\t\tcomponentToRender = (mapView === 1)\n\t\t\t\t? (\n\t\t\t\t\t<HospitalMap\n\t\t\t\t\t\tdata={filteredObjects}\n\t\t\t\t\t\treturnData={this.returnData}\n\t\t\t\t\t\tmaxAndMin={maxAndMin}\n\t\t\t\t\t\tselectedVariable={selectedVariable}\n\t\t\t\t\t\tyear={year}\n\t\t\t\t\t/>\n\t\t\t\t)\n\t\t\t\t: (\n\t\t\t\t\t<CantonMap\n\t\t\t\t\t\tdata={filteredObjects}\n\t\t\t\t\t\treturnData={this.returnData}\n\t\t\t\t\t\tmaxAndMin={maxAndMin}\n\t\t\t\t\t\tselectedVariable={selectedVariable}\n\t\t\t\t\t/>\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tmapInfo = (\n\t\t\t\t<MapInfo\n\t\t\t\t\tmapView={mapView}\n\t\t\t\t\thasLoaded={hasLoaded}\n\t\t\t\t\tyear={year}\n\t\t\t\t\tselectedVariable={selectedVariable}\n\t\t\t\t\tnrOfObjects={filteredObjects.length}\n\t\t\t\t/>\n\t\t\t)\n        }\n\n\n        return (\n        \t<Map // set up map\n                className=\"map\"\n        \t\tcenter={[lat, lng]}\n        \t\tzoom={zoom}\n        \t\tminZoom={8} // set minimum zoom level\n        \t\tmaxZoom={16} // set maximum zoom level\n\t\t\t\tzoomControl={false}\n        \t>\n\t\t\t\t<ZoomControl\n\t\t\t\t\tstyle=\"borderRadius=25px;\"\n\t\t\t\t\tposition=\"topright\"\n\t\t\t\t/>\n\t\t\t\t<Control position=\"topright\">\n\t\t\t          \t<div\n\t\t\t\t\t\t\tid=\"rV\"\n\t\t\t\t\t\t\tclassName=\"resetView\"\n\t\t\t\t\t\t\tonClick={() => this.resetView()}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t</div>\n\t\t      \t</Control>\n        \t\t<TileLayer // add background layer\n        \t\t\tattribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n        \t\t\turl=\"https://api.mapbox.com/styles/v1/nathi/cjf8cggx93p3u2qrqrgwoh5nh/tiles/256/{z}/{x}/{y}?access_token=pk.eyJ1IjoibmF0aGkiLCJhIjoiY2pmOGJ4ZXJmMXMyZDJ4bzRoYWRxbzhteCJ9.x2dbGjsVZTA9HLw6VWaQow\"\n        \t\t/>\n                {mapInfo}\n        \t\t{componentToRender}\n        \t</Map>\n        )\n\t}\n}\n\nexport default Maps;\n"]},"metadata":{},"sourceType":"module"}