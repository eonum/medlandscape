{"ast":null,"code":"import _classCallCheck from \"/Users/moriarty/Documents/UniBe/PSE/medlandscape/medlandscape-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/moriarty/Documents/UniBe/PSE/medlandscape/medlandscape-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/moriarty/Documents/UniBe/PSE/medlandscape/medlandscape-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/moriarty/Documents/UniBe/PSE/medlandscape/medlandscape-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/moriarty/Documents/UniBe/PSE/medlandscape/medlandscape-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/moriarty/Documents/UniBe/PSE/medlandscape/medlandscape-app/src/components/Maps/Legend/Legend.js\";\nimport React, { Component } from 'react';\nimport Control from 'react-leaflet-control';\nimport './Legend.css';\n/*\n*A simple component that displays a legend to better discern the shown values on\n*the map\n*/\n\nvar Legend =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Legend, _Component);\n\n  function Legend() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Legend);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Legend)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.returnBoxStyle = function (color) {\n      return {\n        backgroundColor: 'rgb(' + color + ')'\n      };\n    };\n\n    _this.returnLegendLines = function () {\n      var legendObj = [];\n\n      for (var i = 0; i < _this.props.classColors.length && i < _this.props.boundaries.length; i++) {\n        var color = _this.props.classColors[i];\n        var upperBoundary = _this.props.boundaries[i].upper;\n        var lowerBoundary = _this.props.boundaries[i].lower;\n        var legendLine = {};\n        legendLine.color = _this.returnBoxStyle(color);\n        var value = void 0;\n        if (i === 0) value = '< ' + upperBoundary + '\\n';else if (i === _this.props.boundaries.length - 1) value = '> ' + lowerBoundary + '\\n';else value = lowerBoundary + ' - ' + upperBoundary + '\\n';\n        legendLine.value = value;\n        legendObj.push(legendLine);\n      }\n\n      return legendObj;\n    };\n\n    return _this;\n  }\n\n  _createClass(Legend, [{\n    key: \"render\",\n    value: function render() {\n      var legendLines = this.returnLegendLines();\n      return React.createElement(Control, {\n        position: \"bottomright\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"legend\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, legendLines.map(function (line) {\n        return React.createElement(\"div\", {\n          key: legendLines.indexOf(line),\n          className: \"line\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"box\",\n          style: line.color,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50\n          },\n          __self: this\n        }), line.value);\n      })));\n    }\n  }]);\n\n  return Legend;\n}(Component);\n\nexport default Legend;","map":{"version":3,"sources":["/Users/moriarty/Documents/UniBe/PSE/medlandscape/medlandscape-app/src/components/Maps/Legend/Legend.js"],"names":["React","Component","Control","Legend","returnBoxStyle","color","backgroundColor","returnLegendLines","legendObj","i","props","classColors","length","boundaries","upperBoundary","upper","lowerBoundary","lower","legendLine","value","push","legendLines","map","line","indexOf"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAO,cAAP;AAEA;;;;;IAKMC,M;;;;;;;;;;;;;;;;;;UAELC,c,GAAiB,UAACC,KAAD,EAAW;AAC3B,aAAO;AAACC,QAAAA,eAAe,EAAE,SAASD,KAAT,GAAiB;AAAnC,OAAP;AACA,K;;UAMDE,iB,GAAoB,YAAM;AACzB,UAAIC,SAAS,GAAG,EAAhB;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,MAAKC,KAAL,CAAWC,WAAX,CAAuBC,MAA3B,IAAqCH,CAAC,GAAG,MAAKC,KAAL,CAAWG,UAAX,CAAsBD,MAA/E,EAAuFH,CAAC,EAAxF,EAA2F;AAC1F,YAAIJ,KAAK,GAAG,MAAKK,KAAL,CAAWC,WAAX,CAAuBF,CAAvB,CAAZ;AACS,YAAIK,aAAa,GAAG,MAAKJ,KAAL,CAAWG,UAAX,CAAsBJ,CAAtB,EAAyBM,KAA7C;AACA,YAAIC,aAAa,GAAG,MAAKN,KAAL,CAAWG,UAAX,CAAsBJ,CAAtB,EAAyBQ,KAA7C;AACA,YAAIC,UAAU,GAAG,EAAjB;AAEAA,QAAAA,UAAU,CAACb,KAAX,GAAmB,MAAKD,cAAL,CAAoBC,KAApB,CAAnB;AAEA,YAAIc,KAAK,SAAT;AACT,YAAIV,CAAC,KAAK,CAAV,EACCU,KAAK,GAAG,OAAOL,aAAP,GAAuB,IAA/B,CADD,KAEK,IAAIL,CAAC,KAAK,MAAKC,KAAL,CAAWG,UAAX,CAAsBD,MAAtB,GAA+B,CAAzC,EACJO,KAAK,GAAG,OAAQH,aAAR,GAAwB,IAAhC,CADI,KAESG,KAAK,GAAIH,aAAa,GAAG,KAAhB,GAAwBF,aAAxB,GAAwC,IAAjD;AAELI,QAAAA,UAAU,CAACC,KAAX,GAAmBA,KAAnB;AACAX,QAAAA,SAAS,CAACY,IAAV,CAAeF,UAAf;AACT;;AACD,aAAOV,SAAP;AACA,K;;;;;;;6BAEQ;AACF,UAAIa,WAAW,GAAG,KAAKd,iBAAL,EAAlB;AACN,aACC,oBAAC,OAAD;AAAS,QAAA,QAAQ,EAAC,aAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEuBc,WAAW,CAACC,GAAZ,CAAgB,UAACC,IAAD,EAAU;AACtB,eAAQ;AAAK,UAAA,GAAG,EAAEF,WAAW,CAACG,OAAZ,CAAoBD,IAApB,CAAV;AAAqC,UAAA,SAAS,EAAC,MAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAsD;AAAK,UAAA,SAAS,EAAC,KAAf;AAAqB,UAAA,KAAK,EAAEA,IAAI,CAAClB,KAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAtD,EAAqGkB,IAAI,CAACJ,KAA1G,CAAR;AACH,OAFD,CAFvB,CADF,CADD;AAWA;;;;EA9CmBlB,S;;AAiDrB,eAAeE,MAAf","sourcesContent":["import React, { Component } from 'react';\nimport Control from 'react-leaflet-control';\nimport './Legend.css'\n\n/*\n*A simple component that displays a legend to better discern the shown values on\n*the map\n*/\n\nclass Legend extends Component {\n\n\treturnBoxStyle = (color) => {\n\t\treturn {backgroundColor: 'rgb(' + color + ')'};\n\t}\n\n\t/**\n\t * Returns a line for the Legend.\n\t * @return {Array} Array containing the lines to display.\n\t*/\n\treturnLegendLines = () => {\n\t\tlet legendObj = [];\n\t\tfor (let i = 0; i < this.props.classColors.length && i < this.props.boundaries.length; i++){\n\t\t\tlet color = this.props.classColors[i];\n            let upperBoundary = this.props.boundaries[i].upper;\n            let lowerBoundary = this.props.boundaries[i].lower;\n            let legendLine = {};\n\n            legendLine.color = this.returnBoxStyle(color);\n\n            let value;\n\t\t\tif (i === 0)\n\t\t\t\tvalue = '< ' + upperBoundary + '\\n' ;\n\t\t\telse if (i === this.props.boundaries.length - 1)\n\t\t\t\tvalue = '> ' +  lowerBoundary + '\\n' ;\n            else value =  lowerBoundary + ' - ' + upperBoundary + '\\n' ;\n\n            legendLine.value = value;\n            legendObj.push(legendLine);\n\t\t}\n\t\treturn legendObj;\n\t}\n\n\trender() {\n        let legendLines = this.returnLegendLines();\n\t\treturn (\n\t\t\t<Control position=\"bottomright\">\n\t\t\t\t\t<div className=\"legend\">\n                        {\n                            legendLines.map((line) => {\n                                return (<div key={legendLines.indexOf(line)} className=\"line\"><div className=\"box\" style={line.color}></div>{line.value}</div>)\n                            })\n                        }\n\t\t\t\t\t</div>\n            </Control>\n\t\t)\n\t}\n}\n\nexport default Legend;\n"]},"metadata":{},"sourceType":"module"}