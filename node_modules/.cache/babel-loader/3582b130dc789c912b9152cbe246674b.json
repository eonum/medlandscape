{"ast":null,"code":"import _classCallCheck from \"/Users/moriarty/Documents/UniBe/PSE/medlandscape/medlandscape-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/moriarty/Documents/UniBe/PSE/medlandscape/medlandscape-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/moriarty/Documents/UniBe/PSE/medlandscape/medlandscape-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/moriarty/Documents/UniBe/PSE/medlandscape/medlandscape-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/moriarty/Documents/UniBe/PSE/medlandscape/medlandscape-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/moriarty/Documents/UniBe/PSE/medlandscape/medlandscape-app/src/components/FilterEditor/FilterEditor.js\";\nimport React, { Component } from 'react';\nimport DropdownMenu from '../DropdownMenu/DropdownMenu.js';\nimport CheckboxList from '../CheckboxList/CheckboxList.js';\nimport { withTranslation } from 'react-i18next';\nimport './FilterEditor.css';\n\nvar FilterEditor =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(FilterEditor, _Component);\n\n  function FilterEditor() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, FilterEditor);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(FilterEditor)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      selectedEnum: undefined,\n      selectedValues: [],\n      titles: [],\n      hasLoaded: false\n    };\n\n    _this.dropdownSelectItem = function (item) {\n      _this.setState({\n        hasLoaded: false\n      }, function () {\n        var titles = [];\n\n        for (var i = 0; i < item.values.length; i++) {\n          titles.push(item.values[i] + \": \" + item.values_text[i]);\n        }\n\n        _this.props.setEnum(item);\n\n        _this.setState({\n          selectedEnum: item,\n          selectedValues: [],\n          titles: titles,\n          hasLoaded: true\n        });\n      });\n    };\n\n    _this.checkboxSelectItem = function (item) {\n      if (!!_this.state.selectedEnum) {\n        // removes item if in selectedValues\n        var values = _this.state.selectedValues.filter(function (value) {\n          return value !== item;\n        }); // adds item if not in selectedValues\n\n\n        if (values.length === _this.state.selectedValues.length) {\n          values.push(item);\n        }\n\n        _this.setState({\n          selectedValues: values\n        }, function () {\n          _this.filter(values);\n        });\n      }\n    };\n\n    _this.filter = function (selectedValues) {\n      var _this$props = _this.props,\n          selectedYear = _this$props.selectedYear,\n          hospitals = _this$props.hospitals;\n      var name = _this.state.selectedEnum.name;\n      var filteredHospitals = [];\n\n      if (selectedValues.length > 0) {\n        filteredHospitals = hospitals.filter(function (hospital) {\n          // Enum variables to be filtered with \"OR\"\n          if (name === \"KT\" || name === \"LA\" || name === \"RForm\" || name === \"Typ\") {\n            var counter = 0;\n\n            if (selectedYear in hospital.attributes[name]) {\n              var values = hospital.attributes[name][selectedYear];\n\n              for (var i = 0; i < selectedValues.length; i++) {\n                if (values.includes(selectedValues[i])) {\n                  counter++;\n                }\n              }\n            }\n\n            if (counter === 0) {\n              return false;\n            }\n          } else {\n            // Enum variables to be filtered with \"AND\"\n            if (selectedYear in hospital.attributes[name]) {\n              var _values = hospital.attributes[name][selectedYear];\n\n              for (var _i = 0; _i < selectedValues.length; _i++) {\n                if (!_values.includes(selectedValues[_i])) {\n                  return false;\n                }\n              }\n            } else {\n              return false;\n            }\n          }\n\n          return true;\n        });\n      }\n\n      _this.props.filter(filteredHospitals);\n    };\n\n    return _this;\n  }\n\n  _createClass(FilterEditor, [{\n    key: \"render\",\n    value: function render() {\n      var t = this.props.t;\n      return React.createElement(\"div\", {\n        className: \"filter-editor\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, React.createElement(DropdownMenu, {\n        id: \"filterDropDown\",\n        listItems: this.props.variables,\n        selectItem: this.dropdownSelectItem,\n        selectedItem: this.state.selectedEnum,\n        defaultText: t('dropDowns.filterFallback'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }), this.state.hasLoaded ? React.createElement(\"div\", {\n        className: \"filterCheckbox\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, t('mapView.checkbox')), React.createElement(CheckboxList, {\n        items: this.state.selectedEnum.values,\n        checkboxSelectItem: this.checkboxSelectItem,\n        titles: this.state.titles,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      })) : null);\n    }\n  }]);\n\n  return FilterEditor;\n}(Component);\n/**\n * Convert the component using withTranslation() to have access to t() function\n *  and other i18next props. Then export it.\n */\n\n\nvar LocalizedFilterEditor = withTranslation()(FilterEditor);\nexport default LocalizedFilterEditor;","map":{"version":3,"sources":["/Users/moriarty/Documents/UniBe/PSE/medlandscape/medlandscape-app/src/components/FilterEditor/FilterEditor.js"],"names":["React","Component","DropdownMenu","CheckboxList","withTranslation","FilterEditor","state","selectedEnum","undefined","selectedValues","titles","hasLoaded","dropdownSelectItem","item","setState","i","values","length","push","values_text","props","setEnum","checkboxSelectItem","filter","value","selectedYear","hospitals","name","filteredHospitals","hospital","counter","attributes","includes","t","variables","LocalizedFilterEditor"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport DropdownMenu from '../DropdownMenu/DropdownMenu.js';\nimport CheckboxList from '../CheckboxList/CheckboxList.js';\nimport { withTranslation } from 'react-i18next';\nimport './FilterEditor.css'\n\nclass FilterEditor extends Component {\n\tstate = {\n        selectedEnum : undefined,\n        selectedValues : [],\n\t\ttitles : [],\n\t\thasLoaded : false\n\t};\n\n\t/**\n    *\n    */\n    dropdownSelectItem = (item) => {\n\t\tthis.setState({\n\t\t\thasLoaded : false\n\t\t}, () => {\n\n\t\t\tlet titles = [];\n\t\t\tfor (let i = 0; i < item.values.length; i++)\n\t\t\ttitles.push(item.values[i] + \": \" + item.values_text[i]);\n\n\t\t\tthis.props.setEnum(item);\n\t\t\tthis.setState({\n\t\t\t\tselectedEnum : item,\n\t\t\t\tselectedValues : [],\n\t\t\t\ttitles : titles,\n\t\t\t\thasLoaded : true\n\t\t\t});\n\t\t});\n\n\t}\n\n    /**\n     *\n     * @param  {[type]} item [description]\n     * @return {[type]}      [description]\n     */\n    checkboxSelectItem = (item) => {\n\n\t\tif (!!this.state.selectedEnum) {\n\t\t\t// removes item if in selectedValues\n\t\t\tlet values = this.state.selectedValues.filter((value) => {\n\t\t\t\treturn (value !== item)\n\t\t\t});\n\n\t\t\t// adds item if not in selectedValues\n\t\t\tif (values.length === this.state.selectedValues.length) {\n\t\t\t\tvalues.push(item);\n\t\t\t}\n\n\t\t\tthis.setState({\n\t\t\t\tselectedValues : values\n\t\t\t}, () => {\n\t\t\t\tthis.filter(values);\n\t\t\t});\n\t\t}\n\n    }\n\n    /**\n     * [filter description]\n     * @param  {[type]} selectedValues [description]\n     * @return {[type]}                [description]\n     */\n\tfilter = (selectedValues) => {\n\t\tconst {selectedYear, hospitals} = this.props;\n        const {name} = this.state.selectedEnum;\n\n\t\tlet filteredHospitals =  [];\n\n\t\tif (selectedValues.length > 0) {\n\n\t\t\tfilteredHospitals = hospitals.filter((hospital) => {\n\t\t\t\t// Enum variables to be filtered with \"OR\"\n\t\t\t\tif (name === \"KT\" || name === \"LA\" || name === \"RForm\" || name === \"Typ\") {\n\t\t\t\t\tlet counter = 0;\n\t\t\t\t\tif (selectedYear in hospital.attributes[name]) {\n\t\t\t\t\t\tconst values = hospital.attributes[name][selectedYear];\n\t\t\t\t\t\tfor (let i = 0; i < selectedValues.length; i++) {\n\t\t\t\t\t\t\tif (values.includes(selectedValues[i])) {\n\t\t\t\t\t\t\t\tcounter++;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (counter === 0) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t} else { // Enum variables to be filtered with \"AND\"\n\t\t\t\t\tif (selectedYear in hospital.attributes[name]) {\n\t\t\t\t\t\tconst values = hospital.attributes[name][selectedYear];\n\t\t\t\t\t\tfor (let i = 0; i < selectedValues.length; i++) {\n\t\t\t\t\t\t\tif (!values.includes(selectedValues[i])) {\n\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t});\n\t\t}\n\n\t\tthis.props.filter(filteredHospitals);\n\t}\n\n    render () {\n        const { t } = this.props;\n        return (\n\t\t\t<div className=\"filter-editor\">\n\t\t\t\t<DropdownMenu id=\"filterDropDown\" listItems={this.props.variables} selectItem={this.dropdownSelectItem} selectedItem={this.state.selectedEnum} defaultText={t('dropDowns.filterFallback')}/>\n                {\n\t\t\t\t\t(this.state.hasLoaded)\n\t\t\t\t\t?\n\t\t\t\t\t<div className=\"filterCheckbox\">\n\t\t\t\t\t\t<p>{t('mapView.checkbox')}</p>\n\t\t\t\t\t\t<CheckboxList items={this.state.selectedEnum.values} checkboxSelectItem={this.checkboxSelectItem} titles={this.state.titles} />\n\t\t\t\t\t</div>\n\t\t\t\t\t: null\n\t\t\t\t}\n\t\t\t</div>\n        );\n    }\n}\n\n/**\n * Convert the component using withTranslation() to have access to t() function\n *  and other i18next props. Then export it.\n */\nconst LocalizedFilterEditor = withTranslation()(FilterEditor);\nexport default LocalizedFilterEditor;\n"]},"metadata":{},"sourceType":"module"}