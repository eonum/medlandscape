{"ast":null,"code":"import _classCallCheck from \"/Users/moriarty/Documents/UniBe/PSE/medlandscape/medlandscape-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/moriarty/Documents/UniBe/PSE/medlandscape/medlandscape-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/moriarty/Documents/UniBe/PSE/medlandscape/medlandscape-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/moriarty/Documents/UniBe/PSE/medlandscape/medlandscape-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/moriarty/Documents/UniBe/PSE/medlandscape/medlandscape-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/moriarty/Documents/UniBe/PSE/medlandscape/medlandscape-app/src/components/CentralPanel/CentralPanel.js\";\nimport React, { Component } from 'react';\nimport { withTranslation } from 'react-i18next';\nimport InteractiveTable from '../InteractiveTable/InteractiveTable.js';\nimport './centralPanel.css';\nvar apiURL = \"https://qm1.ch/\";\nvar apiRequest = \"/api/medical_landscape/\";\n\nvar CentralPanel =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(CentralPanel, _Component);\n\n  function CentralPanel() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, CentralPanel);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CentralPanel)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      tableDataLoaded: false\n    };\n\n    _this.requestTableData = function (vars) {\n      var requestedVars = \"\";\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = vars[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var variable = _step.value;\n          requestedVars += variable.name + '$';\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      requestedVars = requestedVars.substring(0, requestedVars.length - 1);\n      var query = \"hospitals?variables=\" + requestedVars;\n\n      _this.props.fetchData(\"hospitals\", query).then(function () {\n        _this.setState({\n          tableDataLoaded: true\n        });\n      });\n    };\n\n    _this.tableDataGenerated = function () {\n      _this.setState({\n        tableDataLoaded: false\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(CentralPanel, [{\n    key: \"render\",\n    value: function render() {\n      var hospitalVars = this.props.variables.filter(function (variable) {\n        return variable.variable_model === \"Hospital\";\n      });\n      var tableView = React.createElement(InteractiveTable, {\n        variables: hospitalVars,\n        hospitals: this.props.hospitals,\n        requestData: this.requestTableData,\n        tableDataLoaded: this.state.tableDataLoaded,\n        tableDataGenerated: this.tableDataGenerated,\n        hasLoaded: this.props.hasLoaded,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      });\n      var mainView;\n\n      switch (this.props.view) {\n        case 2:\n          mainView = tableView;\n          break;\n\n        case 3:\n          mainView = null;\n          break;\n\n        default:\n          mainView = null;\n      }\n\n      return React.createElement(\"div\", {\n        className: \"central-panel\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, mainView);\n    }\n  }]);\n\n  return CentralPanel;\n}(Component);\n/**\n * Convert the component using withTranslation() to have access to t() function\n *  and other i18next props. Then export it.\n */\n\n\nvar LocalizedCentralPanel = withTranslation()(CentralPanel);\nexport default LocalizedCentralPanel;","map":{"version":3,"sources":["/Users/moriarty/Documents/UniBe/PSE/medlandscape/medlandscape-app/src/components/CentralPanel/CentralPanel.js"],"names":["React","Component","withTranslation","InteractiveTable","apiURL","apiRequest","CentralPanel","state","tableDataLoaded","requestTableData","vars","requestedVars","variable","name","substring","length","query","props","fetchData","then","setState","tableDataGenerated","hospitalVars","variables","filter","variable_model","tableView","hospitals","hasLoaded","mainView","view","LocalizedCentralPanel"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,eAAT,QAAgC,eAAhC;AACA,OAAOC,gBAAP,MAA6B,yCAA7B;AACA,OAAO,oBAAP;AAEA,IAAMC,MAAM,GAAG,iBAAf;AACA,IAAIC,UAAU,GAAG,yBAAjB;;IAEMC,Y;;;;;;;;;;;;;;;;;UAEFC,K,GAAQ;AACJC,MAAAA,eAAe,EAAG;AADd,K;;UAIRC,gB,GAAmB,UAACC,IAAD,EAAU;AACzB,UAAIC,aAAa,GAAG,EAApB;AADyB;AAAA;AAAA;;AAAA;AAGzB,6BAAqBD,IAArB,8HAA2B;AAAA,cAAlBE,QAAkB;AACvBD,UAAAA,aAAa,IAAIC,QAAQ,CAACC,IAAT,GAAgB,GAAjC;AACH;AALwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAOzBF,MAAAA,aAAa,GAAGA,aAAa,CAACG,SAAd,CAAwB,CAAxB,EAA2BH,aAAa,CAACI,MAAd,GAAuB,CAAlD,CAAhB;AAEA,UAAIC,KAAK,GAAG,yBAAyBL,aAArC;;AAEA,YAAKM,KAAL,CAAWC,SAAX,CAAqB,WAArB,EAAkCF,KAAlC,EAAyCG,IAAzC,CAA8C,YAAM;AAChD,cAAKC,QAAL,CAAc;AACVZ,UAAAA,eAAe,EAAG;AADR,SAAd;AAGH,OAJD;AAKH,K;;UAEDa,kB,GAAqB,YAAM;AACvB,YAAKD,QAAL,CAAc;AACVZ,QAAAA,eAAe,EAAG;AADR,OAAd;AAGH,K;;;;;;;6BAEQ;AAEL,UAAIc,YAAY,GAAG,KAAKL,KAAL,CAAWM,SAAX,CAAqBC,MAArB,CAA4B,UAAAZ,QAAQ,EAAI;AACvD,eAAQA,QAAQ,CAACa,cAAT,KAA4B,UAApC;AACH,OAFkB,CAAnB;AAIA,UAAIC,SAAS,GACT,oBAAC,gBAAD;AACI,QAAA,SAAS,EAAEJ,YADf;AAEI,QAAA,SAAS,EAAE,KAAKL,KAAL,CAAWU,SAF1B;AAGI,QAAA,WAAW,EAAE,KAAKlB,gBAHtB;AAII,QAAA,eAAe,EAAE,KAAKF,KAAL,CAAWC,eAJhC;AAKI,QAAA,kBAAkB,EAAE,KAAKa,kBAL7B;AAMI,QAAA,SAAS,EAAE,KAAKJ,KAAL,CAAWW,SAN1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ;AAWA,UAAIC,QAAJ;;AACA,cAAQ,KAAKZ,KAAL,CAAWa,IAAnB;AACI,aAAK,CAAL;AACID,UAAAA,QAAQ,GAAGH,SAAX;AACA;;AACJ,aAAK,CAAL;AACIG,UAAAA,QAAQ,GAAG,IAAX;AACA;;AACJ;AACIA,UAAAA,QAAQ,GAAG,IAAX;AARR;;AAWA,aACL;AAAK,QAAA,SAAS,EAAE,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACWA,QADX,CADK;AAKH;;;;EAhEsB5B,S;AAmE3B;;;;;;AAIA,IAAM8B,qBAAqB,GAAG7B,eAAe,GAAGI,YAAH,CAA7C;AACA,eAAeyB,qBAAf","sourcesContent":["import React, { Component } from 'react';\nimport { withTranslation } from 'react-i18next';\nimport InteractiveTable from '../InteractiveTable/InteractiveTable.js';\nimport './centralPanel.css'\n\nconst apiURL = \"https://qm1.ch/\";\nlet apiRequest = \"/api/medical_landscape/\";\n\nclass CentralPanel extends Component {\n\n    state = {\n        tableDataLoaded : false\n    }\n\n    requestTableData = (vars) => {\n        let requestedVars = \"\";\n\n        for (let variable of vars) {\n            requestedVars += variable.name + '$';\n        }\n\n        requestedVars = requestedVars.substring(0, requestedVars.length - 1);\n\n        let query = \"hospitals?variables=\" + requestedVars;\n\n        this.props.fetchData(\"hospitals\", query).then(() => {\n            this.setState({\n                tableDataLoaded : true\n            })\n        })\n    }\n\n    tableDataGenerated = () => {\n        this.setState({\n            tableDataLoaded : false\n        });\n    }\n\n    render() {\n\n        let hospitalVars = this.props.variables.filter(variable => {\n            return (variable.variable_model === \"Hospital\")\n        });\n\n        let tableView = (\n            <InteractiveTable\n                variables={hospitalVars}\n                hospitals={this.props.hospitals}\n                requestData={this.requestTableData}\n                tableDataLoaded={this.state.tableDataLoaded}\n                tableDataGenerated={this.tableDataGenerated}\n                hasLoaded={this.props.hasLoaded}\n            />\n        );\n\n        let mainView;\n        switch (this.props.view) {\n            case 2:\n                mainView = tableView;\n                break;\n            case 3:\n                mainView = null;\n                break;\n            default:\n                mainView = null;\n        }\n\n        return (\n\t\t\t<div className={\"central-panel\"}>\n            \t{mainView}\n\t\t\t</div>\n        );\n    }\n}\n\n/**\n * Convert the component using withTranslation() to have access to t() function\n *  and other i18next props. Then export it.\n */\nconst LocalizedCentralPanel = withTranslation()(CentralPanel);\nexport default LocalizedCentralPanel;\n"]},"metadata":{},"sourceType":"module"}