{"ast":null,"code":"import _classCallCheck from \"/Users/moriarty/Documents/UniBe/PSE/medlandscape/medlandscape-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/moriarty/Documents/UniBe/PSE/medlandscape/medlandscape-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/moriarty/Documents/UniBe/PSE/medlandscape/medlandscape-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/moriarty/Documents/UniBe/PSE/medlandscape/medlandscape-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/moriarty/Documents/UniBe/PSE/medlandscape/medlandscape-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/moriarty/Documents/UniBe/PSE/medlandscape/medlandscape-app/src/components/Maps/CantonMap.js\";\nimport React, { Component } from \"react\";\nimport { GeoJSON, Popup, LayerGroup, Tooltip } from 'react-leaflet';\nimport cantons from './cantons/cantons.json';\nimport Legend from './Legend.js';\nimport { withTranslation } from 'react-i18next';\nimport { numberFormat } from './../../utils.mjs';\n/*\n* Component to display the different cantons on our map. Also displays the selected\n* CantonVariable on to our map\n*/\n\nvar CantonMap =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(CantonMap, _Component);\n\n  function CantonMap() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, CantonMap);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CantonMap)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      colorScheme: ''\n      /**\n       * Definines color of each canton\n       * @param  {Canton Object} item (The canton to style)\n       * @return {Object} style of the canton.\n      */\n\n    };\n\n    _this.getCantonStyle = function (item) {\n      var value = _this.props.returnData(item);\n\n      var color = _this.returnColor(value);\n\n      var cantonStyle = {\n        \"dashArray\": 3,\n        // makes outline of cantons appear dashed (higher value = more distance between dashes)\n        \"color\": \"rgb(\" + color + \")\",\n        // outline color\n        \"fillColor\": \"rgb(\" + color + \")\",\n        \"weight\": 3,\n        // defining how big the outline of canton is\n        \"opacity\": 0.6,\n        // outline opacity\n        \"fillOpacity\": 0.8\n      };\n      return cantonStyle;\n    };\n\n    _this.returnColor = function (value) {\n      var classColors = _this.returnColorClasses()[_this.state.colorScheme];\n\n      var boundaries = _this.returnBoundaries();\n\n      for (var i = 0; i < classColors.length && i < boundaries.length; i++) {\n        var upperBoundary = boundaries[i].upper;\n        var lowerBoundary = boundaries[i].lower;\n\n        if (i === 0 && value <= upperBoundary) {\n          // check for values below rounded lower boundary\n          return classColors[0];\n        }\n\n        if (value <= upperBoundary && value > lowerBoundary) return classColors[i];\n        if (i === classColors.length - 1 && value > upperBoundary) //check for values above rounded upper boundary\n          return classColors[classColors.length - 1];\n      }\n    };\n\n    _this.returnRoundFactor = function (boundary, classSize) {\n      var maxRoundingFactor = 1,\n          y = 100000000000000000;\n\n      while (y > 1) {\n        // doesnt let maxRoundingFactor become less than 1 (-> wouldn't work correctly with math.round)\n        if (classSize > y) {\n          maxRoundingFactor = y / 10;\n          break;\n        }\n\n        y /= 10;\n      }\n\n      return maxRoundingFactor;\n    };\n\n    _this.returnBoundaries = function () {\n      var min = _this.props.maxAndMin.min;\n      var max = _this.props.maxAndMin.max;\n\n      var numberOfClasses = _this.returnColorClasses()[_this.state.colorScheme].length;\n\n      var range = max - min;\n      var classSize = range / numberOfClasses; // defining boundaries\n\n      var boundaries = [];\n\n      for (var i = 0; i < numberOfClasses; i++) {\n        var upperBoundary = max - classSize * i;\n        var lowerBoundary = max - classSize * (i + 1);\n\n        var uBroundFactor = _this.returnRoundFactor(upperBoundary, classSize);\n\n        var lBroundFactor = _this.returnRoundFactor(upperBoundary, classSize); //different rounding for small class sizes\n\n\n        if (classSize < 5) {\n          upperBoundary = upperBoundary.toFixed(1);\n          lowerBoundary = lowerBoundary.toFixed(1);\n        } else {\n          upperBoundary = Math.round(upperBoundary / uBroundFactor) * uBroundFactor;\n          lowerBoundary = Math.round(lowerBoundary / lBroundFactor) * lBroundFactor;\n        } // put boundaries into array the right way (unshift adds to the front of array)\n\n\n        boundaries.unshift({\n          upper: upperBoundary,\n          lower: lowerBoundary\n        });\n      }\n\n      return boundaries;\n    };\n\n    _this.returnColorClasses = function () {\n      var greenToRed8Classes = [\"85, 181, 22\", \"135, 200, 54\", \"177, 213, 15\", \"232, 234, 29\", \"234, 224, 2\", \"245, 175, 1\", \"239, 118, 14\", \"255, 50, 12\"];\n      var redToGreen8Classes = greenToRed8Classes.slice().reverse();\n      var blue8Classes = [\"235, 240, 255\", \"186, 210, 235\", \"142, 190, 218\", \"90, 158, 204\", \"53, 126, 185\", \"28, 91, 166\", \"11, 50, 129\", \"51, 50, 120\"];\n      var red8Classes = [\"253, 238, 186\", \"249, 227, 151\", \"248 ,  199 ,  122\", \"244,  174,  90\", \"246,  133,  82\", \"235 ,  93,  80\", \"204,  73,  80\", \"165,  50,  50\"];\n      var red5Classes = [\"250, 215, 33\", \"255, 177, 28\", \"255, 115, 19\", \"171, 28, 0\", \"140, 0, 0\"];\n      var colorClassesArray = [blue8Classes, red8Classes, red5Classes, redToGreen8Classes, greenToRed8Classes];\n      return colorClassesArray;\n    };\n\n    _this.onMouseOver = function (e) {\n      e.target.setStyle({\n        color: \"#000\",\n        opacity: 1\n      });\n      e.target.bringToFront();\n    };\n\n    _this.onMouseOut = function (item, e) {\n      if (!e.target.isPopupOpen()) _this.resetStyle(item, e);\n    };\n\n    _this.resetStyle = function (item, e) {\n      var style = _this.getCantonStyle(item);\n\n      e.target.setStyle(style);\n    };\n\n    _this.setNewStyle = function (e) {\n      e.target.setStyle({\n        color: \"#000\",\n        opacity: 1\n      });\n      e.target.bringToFront();\n    };\n\n    _this.onClick = function (e) {\n      _this.setNewStyle(e);\n\n      e.target.closeTooltip();\n    };\n\n    return _this;\n  }\n\n  _createClass(CantonMap, [{\n    key: \"componentWillMount\",\n\n    /**\n    * Sets state for color scheme\n    * color schemes can be mapped to variables in future (with componentWillReceiveProps())\n    */\n    value: function componentWillMount() {\n      var colorClassesArray = this.returnColorClasses(); // const random = Math.floor((Math.random() * colorClassesArray.length));\n\n      this.setState({\n        colorScheme: 0\n      });\n    }\n    /**\n    \t* Defines canton color classes\n    * If you add or remove colors in the returned array, the Legend.js will adapt dynamically\n    \t* @return {2D Array} color classes arrays consistiing of rgb colors as strings.\n     \t*/\n\n  }, {\n    key: \"render\",\n\n    /**\n     * Draws cantons on the map\n     * Adds popup an tooltip with canton information to each geoJSON\n     * @return {JSX}\n     */\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          t = _this$props.t,\n          data = _this$props.data,\n          selectedVariable = _this$props.selectedVariable,\n          maxAndMin = _this$props.maxAndMin;\n      return React.createElement(LayerGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }, this.props.data.map(function (item) {\n        return React.createElement(GeoJSON, {\n          key: data.indexOf(item),\n          data: cantons[item.name],\n          style: _this2.getCantonStyle(item),\n          onMouseOver: _this2.onMouseOver.bind(_this2),\n          onMouseOut: _this2.onMouseOut.bind(_this2, item),\n          onClick: _this2.onClick.bind(_this2),\n          onPopupClose: _this2.resetStyle.bind(_this2, item),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 203\n          },\n          __self: this\n        }, React.createElement(Tooltip, {\n          sticky: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 212\n          },\n          __self: this\n        }, item.text + \" (\" + item.name + \")\"), React.createElement(Popup, {\n          maxWidth: \"250\",\n          closeButton: false,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 216\n          },\n          __self: this\n        }, React.createElement(\"table\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 220\n          },\n          __self: this\n        }, React.createElement(\"tbody\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 221\n          },\n          __self: this\n        }, React.createElement(\"tr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 222\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 223\n          },\n          __self: this\n        }, t(\"popup.canton\")), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 224\n          },\n          __self: this\n        }, item.text, \" (\", item.name, \")\")), React.createElement(\"tr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 226\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 227\n          },\n          __self: this\n        }, selectedVariable.text, \":\"), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 228\n          },\n          __self: this\n        }, numberFormat(_this2.props.returnData(item))))))));\n      }), data.length > 0 ? React.createElement(Legend, {\n        maxAndMin: maxAndMin,\n        classColors: this.returnColorClasses()[this.state.colorScheme],\n        boundaries: this.returnBoundaries(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239\n        },\n        __self: this\n      }) : null);\n    }\n  }]);\n\n  return CantonMap;\n}(Component);\n\nvar LocalizedCantonMap = withTranslation()(CantonMap);\nexport default LocalizedCantonMap;","map":{"version":3,"sources":["/Users/moriarty/Documents/UniBe/PSE/medlandscape/medlandscape-app/src/components/Maps/CantonMap.js"],"names":["React","Component","GeoJSON","Popup","LayerGroup","Tooltip","cantons","Legend","withTranslation","numberFormat","CantonMap","state","colorScheme","getCantonStyle","item","value","props","returnData","color","returnColor","cantonStyle","classColors","returnColorClasses","boundaries","returnBoundaries","i","length","upperBoundary","upper","lowerBoundary","lower","returnRoundFactor","boundary","classSize","maxRoundingFactor","y","min","maxAndMin","max","numberOfClasses","range","uBroundFactor","lBroundFactor","toFixed","Math","round","unshift","greenToRed8Classes","redToGreen8Classes","slice","reverse","blue8Classes","red8Classes","red5Classes","colorClassesArray","onMouseOver","e","target","setStyle","opacity","bringToFront","onMouseOut","isPopupOpen","resetStyle","style","setNewStyle","onClick","closeTooltip","setState","t","data","selectedVariable","map","indexOf","name","bind","text","LocalizedCantonMap"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { GeoJSON, Popup, LayerGroup, Tooltip } from 'react-leaflet'\nimport cantons from './cantons/cantons.json';\nimport Legend from './Legend.js'\nimport { withTranslation } from 'react-i18next';\nimport { numberFormat } from './../../utils.mjs';\n\n/*\n* Component to display the different cantons on our map. Also displays the selected\n* CantonVariable on to our map\n*/\n\nclass CantonMap extends Component {\n\n\tstate = {\n\t\tcolorScheme: ''\n\t}\n\n  /**\n   * Definines color of each canton\n   * @param  {Canton Object} item (The canton to style)\n   * @return {Object} style of the canton.\n  */\n\tgetCantonStyle = (item) => {\n\t\tconst value = this.props.returnData(item);\n\t\tconst color = this.returnColor(value);\n\t\tconst cantonStyle = {\n\t\t\t\"dashArray\": 3, // makes outline of cantons appear dashed (higher value = more distance between dashes)\n\t\t\t\"color\": \"rgb(\"+color+\")\", // outline color\n    \t\t\"fillColor\": \"rgb(\"+color+\")\",\n    \t\t\"weight\": 3,  // defining how big the outline of canton is\n    \t\t\"opacity\": 0.6, // outline opacity\n    \t\t\"fillOpacity\": 0.8\n\t\t};\n\t\treturn cantonStyle;\n\t}\n\n\t/**\n\t * Assigns a color to a given value\n\t * @param  {Number} value of a variable)\n\t * @return {String} rgb color as string.\n \t*/\n\treturnColor = (value) => {\n\t\tconst classColors = this.returnColorClasses()[this.state.colorScheme];\n\t\tconst boundaries = this.returnBoundaries();\n\t\tfor (let i = 0; i < classColors.length && i < boundaries.length; i++){\n\t\t\tconst upperBoundary = boundaries[i].upper;\n\t\t\tconst lowerBoundary = boundaries[i].lower;\n\t\t\tif (i === 0 && value <= upperBoundary){ // check for values below rounded lower boundary\n\t\t\t\treturn classColors[0];}\n\t\t\tif (value <= upperBoundary && value > lowerBoundary)\n\t\t\t\treturn classColors[i];\n\t\t\tif (i === classColors.length -1 && value > upperBoundary) //check for values above rounded upper boundary\n\t\t\t\treturn classColors[classColors.length-1];\n\t\t}\n\t}\n\n\t/**\n\t * calculates rounding factor, used to round boundaries to a nice looking number\n\t * @param  {Number} boundary that has to be rounded\n\t * @param  {Number} classSize coming with the boundary\n\t * @return {Number} maxRoundingFactor biggest rounding factor that can be used for the given boundary.\n \t*/\n\treturnRoundFactor = (boundary, classSize) => {\n\t\tlet maxRoundingFactor = 1, y = 100000000000000000;\n\t\twhile (y > 1) { // doesnt let maxRoundingFactor become less than 1 (-> wouldn't work correctly with math.round)\n\t\t\tif (classSize > y) {\n\t\t\t\tmaxRoundingFactor = y / 10;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\ty /= 10\n\t\t}\n\t\treturn maxRoundingFactor;\n\t}\n\n\t/**\n\t * Calculates nice rounded boundaries for the color classes\n\t * @param  {Number} value of a variable)\n\t * @return {String} rgb color as string.\n\t*/\n\treturnBoundaries = () => {\n\t\tconst min = this.props.maxAndMin.min;\n\t\tconst max = this.props.maxAndMin.max;\n\t\tconst numberOfClasses = this.returnColorClasses()[this.state.colorScheme].length;\n\t\tconst range = max - min;\n\t\tconst classSize = range / numberOfClasses;\n\t\t// defining boundaries\n\t\tlet boundaries = [];\n\t\tfor (let i = 0; i < numberOfClasses; i++){\n\t\t\tlet upperBoundary = max - classSize * i;\n\t\t\tlet lowerBoundary = max - classSize * (i + 1);\n\t\t\tconst uBroundFactor = this.returnRoundFactor(upperBoundary, classSize);\n\t\t\tconst lBroundFactor = this.returnRoundFactor(upperBoundary, classSize);\n\t\t\t//different rounding for small class sizes\n\t\t\tif (classSize < 5){\n\t\t\t\tupperBoundary = upperBoundary.toFixed(1);\n\t\t\t\tlowerBoundary = lowerBoundary.toFixed(1);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tupperBoundary = Math.round((upperBoundary) / uBroundFactor) * uBroundFactor;\n\t\t\t\tlowerBoundary = Math.round((lowerBoundary) / lBroundFactor) * lBroundFactor;\n\t\t\t}\n\t\t\t// put boundaries into array the right way (unshift adds to the front of array)\n\t\t\tboundaries.unshift({\n\t\t\t\tupper: upperBoundary,\n\t\t\t\tlower: lowerBoundary\n\t\t\t})\n\t\t}\n\t\treturn boundaries;\n\t}\n\n\t/**\n\t* Sets state for color scheme\n\t* color schemes can be mapped to variables in future (with componentWillReceiveProps())\n\t*/\n\tcomponentWillMount(){\n\t\tconst colorClassesArray = this.returnColorClasses();\n\t\t// const random = Math.floor((Math.random() * colorClassesArray.length));\n\t\tthis.setState({\n\t\t\tcolorScheme: 0,\n\t\t});\n\t}\n\n\t/**\n \t* Defines canton color classes\n\t* If you add or remove colors in the returned array, the Legend.js will adapt dynamically\n \t* @return {2D Array} color classes arrays consistiing of rgb colors as strings.\n  \t*/\n\treturnColorClasses = () => {\n        const greenToRed8Classes = [\"85, 181, 22\", \"135, 200, 54\", \"177, 213, 15\", \"232, 234, 29\", \"234, 224, 2\", \"245, 175, 1\", \"239, 118, 14\", \"255, 50, 12\"];\n\t\tconst redToGreen8Classes = greenToRed8Classes.slice().reverse();\n\t\tconst blue8Classes = [\"235, 240, 255\", \"186, 210, 235\", \"142, 190, 218\", \"90, 158, 204\", \"53, 126, 185\", \"28, 91, 166\", \"11, 50, 129\", \"51, 50, 120\"];\n\t\tconst red8Classes = [\"253, 238, 186\", \"249, 227, 151\", \"248 ,  199 ,  122\", \"244,  174,  90\", \"246,  133,  82\" , \"235 ,  93,  80\", \"204,  73,  80\",  \"165,  50,  50\"]\n\t\tconst red5Classes = [\"250, 215, 33\", \"255, 177, 28\", \"255, 115, 19\", \"171, 28, 0\", \"140, 0, 0\"];\n\t\tconst colorClassesArray = [blue8Classes, red8Classes, red5Classes, redToGreen8Classes, greenToRed8Classes];\n\t\treturn colorClassesArray;\n\t}\n\n\t/**\n\t* Changes canton style if you hover on a canton with your mouse\n\t* @param {Object} e the event\n\t*/\n\tonMouseOver = (e) => {\n\t\te.target.setStyle({\n\t\t\tcolor: \"#000\",\n\t\t\topacity: 1\n\t\t});\n\t\te.target.bringToFront();\n\t}\n\n\t/**\n\t* Set back canton style if you hover off a canton with your mouse\n\t* @param {Object} item = the canton you are hovering off\n\t* @param {Object} e the event\n\t*/\n\tonMouseOut = (item, e) => {\n\t\tif (!e.target.isPopupOpen())\n\t\tthis.resetStyle(item, e);\n\t}\n\n\t/**\n\t* Set back canton style\n\t* @param {Object} item = the canton\n\t* @param {Object} e the event\n\t*/\n\tresetStyle = (item, e) => {\n\t\tconst style = this.getCantonStyle(item);\n\t\te.target.setStyle(style);\n\t}\n\n\t/**\n\t* Set a new style to a canton on the map\n\t* @param {Object} e the event\n\t*/\n\tsetNewStyle = (e) =>{\n\t\te.target.setStyle({\n\t\t\tcolor: \"#000\",\n\t\t\topacity: 1\n\t\t});\n\t\te.target.bringToFront();\n\t}\n\n\t/**\n\t* Define behaviour of click on hospital\n\t* @param {Object} e the event\n\t*/\n\tonClick = (e) => {\n\t\tthis.setNewStyle(e);\n\t\te.target.closeTooltip();\n\t}\n\n\t/**\n\t * Draws cantons on the map\n\t * Adds popup an tooltip with canton information to each geoJSON\n\t * @return {JSX}\n\t */\n    render() {\n\t\tconst {t, data, selectedVariable, maxAndMin} = this.props;\n\t\treturn (\n\t\t\t\t<LayerGroup>\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.props.data.map((item) => (\n\t\t\t\t\t\t\t<GeoJSON\n\t\t\t\t\t\t\t\tkey = {data.indexOf(item)}\n\t\t\t\t\t\t\t\tdata = {cantons[item.name]}\n\t\t\t\t\t\t\t\tstyle = {this.getCantonStyle(item)}\n\t\t\t\t\t\t\t\tonMouseOver = {this.onMouseOver.bind(this)}\n\t\t\t\t\t\t\t\tonMouseOut = {this.onMouseOut.bind(this, item)}\n\t\t\t\t\t\t\t\tonClick = {this.onClick.bind(this)}\n\t\t\t\t\t\t\t\tonPopupClose = {this.resetStyle.bind(this, item)}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<Tooltip\n\t\t\t\t\t\t\t\t\tsticky = {true}>\n\t\t\t\t\t\t\t\t\t{item.text + \" (\" + item.name + \")\"}\n\t\t\t\t\t\t\t\t</Tooltip>\n\t\t\t\t\t\t\t\t<Popup\n\t\t\t\t\t\t\t\t\tmaxWidth = \"250\"\n\t\t\t\t\t\t\t\t\tcloseButton = {false}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t\t\t<td>{t(\"popup.canton\")}</td>\n\t\t\t\t\t\t\t\t\t\t\t\t<td>{item.text} ({item.name})</td>\n\t\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t\t\t<td>{selectedVariable.text}:</td>\n\t\t\t\t\t\t\t\t\t\t\t\t<td>{numberFormat(this.props.returnData(item))}</td>\n\t\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t\t</tbody>\n\t\t\t\t\t\t\t\t\t</table>\n\t\t\t\t\t\t\t\t</Popup>\n\t\t\t\t\t\t\t</GeoJSON>\n\t\t\t\t\t\t))\n\t\t\t\t\t}\n\t\t\t\t\t{\n\t\t\t\t\t\t(data.length > 0)\n\t\t\t\t\t\t?\n\t\t\t\t\t\t<Legend\n\t\t\t\t\t\t\tmaxAndMin={maxAndMin}\n\t\t\t\t\t\t\tclassColors={this.returnColorClasses()[this.state.colorScheme]}\n\t\t\t\t\t\t\tboundaries={this.returnBoundaries()}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t: null\n\t\t\t\t\t}\n\t\t\t\t</LayerGroup>\n\t\t)\n\t}\n}\n\nconst LocalizedCantonMap = withTranslation()(CantonMap);\nexport default LocalizedCantonMap;\n"]},"metadata":{},"sourceType":"module"}