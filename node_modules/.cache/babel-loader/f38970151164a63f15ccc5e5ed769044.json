{"ast":null,"code":"import _classCallCheck from \"/Users/moriarty/Documents/UniBe/PSE/medlandscape/medlandscape-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/moriarty/Documents/UniBe/PSE/medlandscape/medlandscape-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/moriarty/Documents/UniBe/PSE/medlandscape/medlandscape-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/moriarty/Documents/UniBe/PSE/medlandscape/medlandscape-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/moriarty/Documents/UniBe/PSE/medlandscape/medlandscape-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/moriarty/Documents/UniBe/PSE/medlandscape/medlandscape-app/src/components/Graphs/BoxPlot.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { numberFormat, calculateCircleColor } from './../../utils.mjs';\nimport * as d3 from \"d3\";\nimport './BoxPlot.css';\n/**\n* BoxPlot is the entity we use to calculate and draw a boxplot from data given as props\n*/\n\nvar BoxPlot =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(BoxPlot, _Component);\n\n  function BoxPlot() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, BoxPlot);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(BoxPlot)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.returnData = function (item) {\n      var varName = _this.props.selectedVariable.name;\n      var values = item.attributes[varName];\n      var data = values[_this.props.year];\n      return {\n        value: data,\n        hospital: item\n      };\n    };\n\n    _this.makeDataArray = function () {\n      // sort out undefined values for given year\n      var filteredArr = _this.props.objects.filter(function (obj) {\n        return _this.returnData(obj) !== undefined && obj.name !== \"Ganze Schweiz\";\n      });\n\n      return filteredArr.map(function (item) {\n        return _this.returnData(item);\n      });\n    };\n\n    _this.addPopup = function () {\n      d3.select(\"#boxplot .popup\").remove();\n      var popup = d3.select(\"#boxplot\").append(\"div\").style(\"display\", \"none\").attr(\"class\", \"popup\");\n      var table = popup.append(\"table\");\n      var firstRow = table.append(\"tr\");\n      firstRow.append(\"td\").text(_this.props.t(\"popup.hospital\"));\n      firstRow.append(\"td\").attr(\"class\", \"popupName\");\n      var secondRow = table.append(\"tr\");\n      secondRow.append(\"td\").text(_this.props.t(\"popup.address\"));\n      secondRow.append(\"td\").attr(\"class\", \"popupAddress\");\n      var thirdRow = table.append(\"tr\");\n      thirdRow.append(\"td\").text(_this.props.selectedVariable.text);\n      thirdRow.append(\"td\").attr(\"class\", \"popupVariable\");\n    };\n\n    return _this;\n  }\n\n  _createClass(BoxPlot, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      // draw a chart if the variable information has been loaded via api-call\n      if (this.props.hasLoaded && this.props.objects.length !== 0) {\n        this.drawChart();\n      }\n    }\n    /**\n     * Returns the values stored in a this.props.objects canton/hospital\n     * @param  {Canton || Hospital Object} item The object to extract the values from\n     * @return {int || float} The selected entry in the item.values object\n     */\n\n  }, {\n    key: \"drawChart\",\n\n    /**\n     * Draws a BoxPlot\n     */\n    value: function drawChart() {\n      var _this2 = this;\n\n      var radius = 4;\n      var height = 480;\n      var width = 600;\n      var margin = {\n        top: 10,\n        bottom: 30,\n        left: 40,\n        right: 10\n      };\n      d3.select(\"#boxplot svg\").remove();\n      var data = this.makeDataArray(); // array only with values (selected variable)\n\n      var valueArr = data.map(function (d) {\n        return d.value;\n      }).sort(d3.ascending); // calculate the quartiles\n\n      var quartiles = [d3.quantile(valueArr, 0.25), d3.quantile(valueArr, 0.5), d3.quantile(valueArr, 0.75)];\n      var iqr = (quartiles[2] - quartiles[0]) * 1.5; // calculate min and max and mark all outliers\n\n      var max = Number.MIN_VALUE;\n      var min = Number.MAX_VALUE;\n      var box_data = d3.nest().key(function (d) {\n        var type = d.value < quartiles[0] - iqr || d.value > quartiles[2] + iqr ? \"outlier\" : \"normal\";\n\n        if (type === \"normal\" && (d.value < min || d.value > max)) {\n          max = Math.max(max, d.value);\n          min = Math.min(min, d.value);\n        }\n\n        return type;\n      }).map(data); // add empty array if no outliers\n\n      if (!box_data[\"$outlier\"]) box_data[\"$outlier\"] = [];\n      var yscale = d3.scaleLinear().domain(d3.extent(data.map(function (d) {\n        return d.value;\n      }))).nice().range([height - margin.top - margin.bottom, 0]);\n\n      var tickFormat = function tickFormat(n) {\n        return n.toLocaleString();\n      }; // generate chart\n\n\n      var svg = d3.select(\"#boxplot\").append(\"svg\").attr(\"width\", width + 100).attr(\"height\", height); // Its opacity is set to 0: we don't see it by default.\n\n      var tooltip = d3.select(\"#boxplot\").append(\"div\").style(\"opacity\", 0).attr(\"class\", \"tooltip\"); // add popup\n\n      this.addPopup(); // function that changes  tooltip when the user hovers over a point.\n      // opacity is set to 1: we can now see it. Plus it set the text and position of tooltip depending on the datapoint (d)\n\n      var mouseover = function mouseover(d) {\n        d3.select(\"#boxplot .tooltip\").style(\"opacity\", 1).text(d.hospital.name);\n      };\n\n      var mousemove = function mousemove(d) {\n        d3.select(\"#boxplot .tooltip\").style(\"left\", d3.event.pageX + \"px\").style(\"top\", d3.event.pageY - 28 + \"px\");\n      }; // close popup if you click outside\n\n\n      var func = function func(e) {\n        d3.select(\"#boxplot .popup\").style(\"display\", \"none\");\n        document.removeEventListener(\"click\", func);\n      };\n\n      var mouseclick = function mouseclick(d) {\n        d3.select(\"#boxplot .popup\").style(\"display\", \"block\").style(\"left\", d3.event.pageX + \"px\").style(\"top\", d3.event.pageY - 28 + \"px\");\n        d3.select(\"#boxplot .popupName\").text(d.hospital.name);\n        d3.select(\"#boxplot .popupAddress\").html(\"<dd>\" + d.hospital.street + \",</dd>\" + d.hospital.city);\n        d3.select(\"#boxplot .popupVariable\").text(numberFormat(d.value)); // prevent that the click event closes the popup\n\n        d3.event.stopPropagation();\n        document.addEventListener(\"click\", func);\n      }; // A function that change this tooltip when the leaves a point: just need to set opacity to 0 again\n\n\n      var mouseleave = function mouseleave(d) {\n        d3.select(\"#boxplot .tooltip\").transition().duration(200).style(\"opacity\", 0);\n      };\n\n      svg.append(\"g\").append(\"rect\").attr(\"width\", width).attr(\"height\", height).style(\"color\", \"white\").style(\"opacity\", 0).on('dblclick', function () {\n        _this2.implode_boxplot(width, yscale, quartiles, min, max);\n      });\n      var container = svg.append(\"g\").attr(\"transform\", \"translate(\" + (margin.left + 40) + \",\" + margin.top + \")\");\n      var yAxis = d3.axisLeft(yscale).tickFormat(tickFormat);\n      container.append(\"g\").attr(\"class\", \"d3-exploding-boxplot y axis\").call(yAxis).append(\"text\").attr(\"transform\", \"rotate(-90)\").attr(\"x\", -margin.top - d3.mean(yscale.range())).attr(\"dy\", \".71em\").attr(\"y\", -margin.left + 5).style(\"text-anchor\", \"middle\").text(\"ylab test\");\n      container = container.insert(\"g\", \".axis\");\n      var boxContent = container.append(\"g\").attr('class', 'd3-exploding-boxplot boxcontent'); //create jitter\n\n      boxContent.append(\"g\").attr(\"class\", \"d3-exploding-boxplot outliers-points\").selectAll(\".point\").data(box_data[\"$outlier\"]).enter().append(\"circle\").call(function (s) {\n        // init + draw jitter\n        s.attr(\"class\", \"d3-exploding-boxplot point\").attr(\"r\", radius).style(\"fill\", function (d) {\n          return calculateCircleColor(d.hospital, _this2.props.year);\n        }).attr(\"cx\", function (d) {\n          return Math.floor(Math.random() * width * 0.8);\n        }).attr(\"cy\", function (d) {\n          return yscale(d.value);\n        }).on(\"mouseover\", mouseover).on(\"mousemove\", mousemove).on(\"mouseleave\", mouseleave).on(\"click\", mouseclick);\n      });\n      var box = boxContent.append(\"g\").attr(\"class\", \"d3-exploding-boxplot normal-points\").append(\"g\").attr(\"class\", \"d3-exploding-boxplot box\").on(\"click\", function (d) {\n        _this2.explode_boxplot(width, radius, yscale, quartiles, box_data, mouseover, mousemove, mouseleave, mouseclick);\n      }); //box\n\n      box.append(\"rect\").attr(\"class\", \"d3-exploding-boxplot box\"); //median line\n\n      box.append(\"line\").attr(\"class\", \"d3-exploding-boxplot median line\").on(\"mouseover\", function () {\n        return mouseover({\n          hospital: {\n            name: _this2.props.t('boxPlot.median')\n          }\n        });\n      }).on(\"mousemove\", mousemove).on(\"mouseleave\", mouseleave); //min line\n\n      box.append(\"line\").attr(\"class\", \"d3-exploding-boxplot min line hline\").on(\"mouseover\", function () {\n        return mouseover({\n          hospital: {\n            name: _this2.props.t('boxPlot.minimum')\n          }\n        });\n      }).on(\"mousemove\", mousemove).on(\"mouseleave\", mouseleave); //min vline\n\n      box.append(\"line\").attr(\"class\", \"d3-exploding-boxplot line min vline\"); //max line\n\n      box.append(\"line\").attr(\"class\", \"d3-exploding-boxplot max line hline\").on(\"mouseover\", function () {\n        return mouseover({\n          hospital: {\n            name: _this2.props.t('boxPlot.maximum')\n          }\n        });\n      }).on(\"mousemove\", mousemove).on(\"mouseleave\", mouseleave); //max vline\n\n      box.append(\"line\").attr(\"class\", \"d3-exploding-boxplot line max vline\");\n      this.drawBox(width, yscale, quartiles, min, max);\n    }\n    /**\n    * explodes the boxplot according to the given parameters (hides the boxplot box and draws points)\n    */\n\n  }, {\n    key: \"explode_boxplot\",\n    value: function explode_boxplot(width, radius, yscale, quartiles, box_data, mouseover, mousemove, mouseleave, mouseclick) {\n      var _this3 = this;\n\n      var trans = d3.select(\"#boxplot\").select(\"g.box\").transition().ease(d3.easeBackIn).duration(300); // hide boxplot box\n\n      trans.select('rect.box').attr('x', width * 0.5).attr('width', 0).attr('y', yscale(quartiles[1])).attr('height', 0); //median line\n\n      trans.selectAll('line').attr('x1', width * 0.5).attr('x2', width * 0.5).attr('y1', yscale(quartiles[1])).attr('y2', yscale(quartiles[1])); // add the points\n\n      d3.select(\"#boxplot\").selectAll('.normal-points').selectAll('.point').data(box_data[\"$normal\"]).enter().append('circle').attr('cx', width * 0.5).attr('cy', yscale(quartiles[1])).call(function (s) {\n        s.attr('class', 'd3-exploding-boxplot point').attr('r', radius).style(\"fill\", function (d) {\n          return calculateCircleColor(d.hospital, _this3.props.year);\n        }).on(\"mouseover\", mouseover).on(\"mousemove\", mousemove).on(\"mouseleave\", mouseleave).on(\"click\", mouseclick);\n      }).transition().ease(d3.easeBackOut).delay(function () {\n        return 300 + 100 * Math.random();\n      }).duration(function () {\n        return 300 + 300 * Math.random();\n      }).call(function (s) {\n        s.attr('cx', function (d) {\n          return Math.floor(Math.random() * width * 0.8);\n        }).attr('cy', function (d) {\n          return yscale(d.value);\n        });\n      });\n    }\n    /**\n    * draws the boxplot box (according to the given parameters)\n    */\n\n  }, {\n    key: \"drawBox\",\n    value: function drawBox(width, yscale, quartiles, min, max) {\n      var box = d3.select(\"#boxplot\").selectAll(\"g.box\").transition().ease(d3.easeBackOut).duration(300).delay(200);\n      box.select('rect.box').attr('x', width * 0.1).attr('width', width * 0.8).attr('y', yscale(quartiles[2])).attr('height', function (d) {\n        return yscale(quartiles[0]) - yscale(quartiles[2]);\n      }); //median line\n\n      box.select('line.median').attr('x1', width * 0.1).attr('x2', width * 0.9).attr('y1', yscale(quartiles[1])).attr('y2', yscale(quartiles[1])); //min line\n\n      box.select('line.min.hline').attr('x1', width * 0.25).attr('x2', width * 0.75).attr('y1', yscale(Math.min(min, quartiles[0]))).attr('y2', yscale(Math.min(min, quartiles[0]))); //min vline\n\n      box.select('line.min.vline').attr('x1', width * 0.5).attr('x2', width * 0.5).attr('y1', yscale(Math.min(min, quartiles[0]))).attr('y2', yscale(quartiles[0])); //max line\n\n      box.select('line.max.hline').attr('x1', width * 0.25).attr('x2', width * 0.75).attr('y1', yscale(Math.max(max, quartiles[2]))).attr('y2', yscale(Math.max(max, quartiles[2]))); //max vline\n\n      box.select('line.max.vline').attr('x1', width * 0.5).attr('x2', width * 0.5).attr('y1', yscale(quartiles[2])).attr('y2', yscale(Math.max(max, quartiles[2])));\n    }\n    /**\n    * hides the points and adds the boxplot box again\n    */\n\n  }, {\n    key: \"implode_boxplot\",\n    value: function implode_boxplot(width, yscale, quartiles, min, max) {\n      d3.select(\"#boxplot\").selectAll(\".normal-points\").selectAll('circle').transition().ease(d3.easeBackOut).duration(function () {\n        return 300 + 300 * Math.random();\n      }).attr(width * 0.5).attr('cy', yscale(quartiles[1])).remove();\n      var trans = d3.select(\"#boxPlot\").select('.boxcontent').transition().ease(d3.easeBackOut).duration(300).delay(200);\n      trans.select('rect.box').attr('x', 0).attr('width', width).attr('y', yscale(quartiles[2])).attr('height', function (d) {\n        return yscale(quartiles[0]) - yscale(quartiles[2]);\n      });\n      this.drawBox(width, yscale, quartiles, min, max);\n    }\n    /**\n    * adds the popup div to the DOM\n    */\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        id: \"boxplot\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 425\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return BoxPlot;\n}(Component);\n/**\n * PropTypes:\n *\n * objects: list of hospitals with data\n * selectedVariable:  selected variable\n * year: selected year\n * hasLoaded: bool that will be true if the data is loaded\n */\n\n\nBoxPlot.propTypes = {\n  objects: PropTypes.array.isRequired,\n  selectedVariable: PropTypes.object.isRequired,\n  year: PropTypes.string.isRequired,\n  hasLoaded: PropTypes.bool.isRequired\n};\nvar LocalizedBoxPlot = withTranslation()(BoxPlot);\nexport default LocalizedBoxPlot;","map":{"version":3,"sources":["/Users/moriarty/Documents/UniBe/PSE/medlandscape/medlandscape-app/src/components/Graphs/BoxPlot.js"],"names":["React","Component","PropTypes","withTranslation","numberFormat","calculateCircleColor","d3","BoxPlot","returnData","item","varName","props","selectedVariable","name","values","attributes","data","year","value","hospital","makeDataArray","filteredArr","objects","filter","obj","undefined","map","addPopup","select","remove","popup","append","style","attr","table","firstRow","text","t","secondRow","thirdRow","hasLoaded","length","drawChart","radius","height","width","margin","top","bottom","left","right","valueArr","d","sort","ascending","quartiles","quantile","iqr","max","Number","MIN_VALUE","min","MAX_VALUE","box_data","nest","key","type","Math","yscale","scaleLinear","domain","extent","nice","range","tickFormat","n","toLocaleString","svg","tooltip","mouseover","mousemove","event","pageX","pageY","func","e","document","removeEventListener","mouseclick","html","street","city","stopPropagation","addEventListener","mouseleave","transition","duration","on","implode_boxplot","container","yAxis","axisLeft","call","mean","insert","boxContent","selectAll","enter","s","floor","random","box","explode_boxplot","drawBox","trans","ease","easeBackIn","easeBackOut","delay","propTypes","array","isRequired","object","string","bool","LocalizedBoxPlot"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { numberFormat, calculateCircleColor } from './../../utils.mjs';\nimport * as d3 from \"d3\";\nimport './BoxPlot.css'\n\n/**\n* BoxPlot is the entity we use to calculate and draw a boxplot from data given as props\n*/\nclass BoxPlot extends Component {\n\n\tcomponentDidUpdate(){\n\t\t// draw a chart if the variable information has been loaded via api-call\n\t\tif (this.props.hasLoaded && this.props.objects.length !== 0)\n\t\t\t{\n\t\t\t\tthis.drawChart();\n\t\t\t}\n\t}\n\n\t/**\n\t * Returns the values stored in a this.props.objects canton/hospital\n\t * @param  {Canton || Hospital Object} item The object to extract the values from\n\t * @return {int || float} The selected entry in the item.values object\n\t */\n\treturnData = (item) => {\n\t\tlet varName = this.props.selectedVariable.name;\n\t\tlet values = item.attributes[varName];\n\t\tlet data = (values[this.props.year]);\n\n\t\treturn {value: data, hospital: item};\n\t}\n\n\t/**\n\t * Returns an Array where all defined values for given year are stored\n\t * This needed to sort the values and draw the boxplot\n\t * @return {array} dataArray\n\t */\n\tmakeDataArray = () => {\n\t\t// sort out undefined values for given year\n\t\tlet filteredArr = this.props.objects.filter((obj) => {\n\t\t\treturn (this.returnData(obj) !== undefined && obj.name !== \"Ganze Schweiz\");\n\t\t});\n\t\treturn filteredArr.map((item) => this.returnData(item));\n\t}\n\n\t/**\n\t * Draws a BoxPlot\n\t */\n\tdrawChart() {\n\t\tlet radius = 4;\n\t\tlet height = 480;\n\t\tlet width = 600;\n\t\tlet margin = {top:10,bottom:30,left:40,right:10};\n\n\t\td3.select(\"#boxplot svg\").remove();\n\n\t\tlet data = this.makeDataArray();\n\n\t\t// array only with values (selected variable)\n\t\tlet valueArr = data.map((d) => d.value).sort(d3.ascending);\n\n\t\t// calculate the quartiles\n\t\tlet quartiles = [\n\t\t\td3.quantile(valueArr,0.25),\n\t\t\td3.quantile(valueArr,0.5),\n\t\t\td3.quantile(valueArr,0.75)\n\t\t];\n\t\tlet iqr = (quartiles[2]-quartiles[0]) * 1.5;\n\n\n\t\t// calculate min and max and mark all outliers\n\t\tlet max = Number.MIN_VALUE;\n\t\tlet min = Number.MAX_VALUE;\n\n\t\tlet box_data = d3.nest()\n\t\t\t.key(function(d) {\n\t\t\t\tlet type = (d.value < quartiles[0] - iqr || d.value > quartiles[2] + iqr) ?\n\t\t\t\t\t\"outlier\" : \"normal\";\n\n\t\t\t\tif(type === \"normal\" && (d.value < min || d.value > max)){\n\t\t\t\t\tmax = Math.max(max,d.value);\n\t\t\t\t\tmin = Math.min(min,d.value);\n\t\t\t\t}\n\t\t\t\treturn type;\n             })\n\t\t\t .map(data);\n\n\t\t// add empty array if no outliers\n\t\tif(!box_data[\"$outlier\"])\n\t\t\tbox_data[\"$outlier\"] = [];\n\n\n\t\tlet yscale = d3.scaleLinear()\n\t\t\t.domain(d3.extent(data.map((d) => d.value)))\n\t\t\t.nice()\n\t\t\t.range([height-margin.top-margin.bottom,0]);\n\n\n\t\tlet tickFormat = function(n){return n.toLocaleString()};\n\n\n\t\t// generate chart\n\t\tlet svg = d3.select(\"#boxplot\").append(\"svg\")\n\t\t\t.attr(\"width\", width + 100)\n            .attr(\"height\", height);\n\n\n\t\t// Its opacity is set to 0: we don't see it by default.\n     \tvar tooltip = d3.select(\"#boxplot\")\n\t\t    .append(\"div\")\n\t\t    .style(\"opacity\", 0)\n\t\t    .attr(\"class\", \"tooltip\")\n\t\t// add popup\n\t\tthis.addPopup();\n\n     \t// function that changes  tooltip when the user hovers over a point.\n     \t// opacity is set to 1: we can now see it. Plus it set the text and position of tooltip depending on the datapoint (d)\n    \tvar mouseover = function(d) {\n       \t\td3.select(\"#boxplot .tooltip\").style(\"opacity\", 1)\n\t\t\t\t.text(d.hospital.name);\n\t\t}\n\n    \tvar mousemove = function(d) {\n       \t\td3.select(\"#boxplot .tooltip\")\n\t\t\t\t.style(\"left\", (d3.event.pageX) + \"px\")\n\t\t\t\t.style(\"top\", (d3.event.pageY - 28) + \"px\");\n    \t}\n\n\t\t// close popup if you click outside\n\t\tvar func = function(e) {\n\t\t\td3.select(\"#boxplot .popup\")\n\t\t\t\t.style(\"display\", \"none\");\n\t\t\tdocument.removeEventListener(\"click\", func);\n\t\t}\n\n\t\tvar mouseclick = function(d) {\n       \t\td3.select(\"#boxplot .popup\")\n\t\t\t\t.style(\"display\", \"block\")\n\t\t\t\t.style(\"left\", (d3.event.pageX) + \"px\")\n\t\t\t\t.style(\"top\", (d3.event.pageY - 28) + \"px\")\n\t\t\td3.select(\"#boxplot .popupName\")\n\t\t\t\t.text(d.hospital.name);\n\t\t\td3.select(\"#boxplot .popupAddress\")\n\t\t\t\t.html(\"<dd>\" + d.hospital.street + \",</dd>\" + d.hospital.city);\n\t\t\td3.select(\"#boxplot .popupVariable\")\n\t\t\t\t.text(numberFormat(d.value));\n\n\t\t\t// prevent that the click event closes the popup\n\t\t\td3.event.stopPropagation();\n\t\t\tdocument.addEventListener(\"click\", func);\n    \t}\n\n     \t// A function that change this tooltip when the leaves a point: just need to set opacity to 0 again\n    \tvar mouseleave = function(d) {\n       \t\td3.select(\"#boxplot .tooltip\").transition()\n        \t\t.duration(200)\n        \t\t.style(\"opacity\", 0)\n    \t}\n\n\t\tsvg.append(\"g\").append(\"rect\")\n\t\t\t.attr(\"width\", width)\n\t\t\t.attr(\"height\", height)\n\t\t\t.style(\"color\", \"white\")\n\t\t\t.style(\"opacity\", 0)\n\t\t\t.on('dblclick', () => {this.implode_boxplot(width, yscale, quartiles, min, max);});\n\n\n\t\tlet container = svg.append(\"g\")\n\t\t\t.attr(\"transform\", \"translate(\" + (margin.left + 40) + \",\" + margin.top + \")\");\n\n\t\tlet yAxis = d3.axisLeft(yscale).tickFormat(tickFormat);\n\n\t\tcontainer.append(\"g\")\n\t\t\t.attr(\"class\", \"d3-exploding-boxplot y axis\")\n            .call(yAxis)\n          .append(\"text\")\n            .attr(\"transform\", \"rotate(-90)\")\n            .attr(\"x\", -margin.top-d3.mean(yscale.range()))\n            .attr(\"dy\", \".71em\")\n            .attr(\"y\",-margin.left+5)\n            .style(\"text-anchor\", \"middle\")\n            .text(\"ylab test\");\n\n\t\tcontainer = container.insert(\"g\",\".axis\");\n\n\t\tlet boxContent = container.append(\"g\")\n\t\t\t.attr('class','d3-exploding-boxplot boxcontent');\n\n\t\t//create jitter\n\t\tboxContent.append(\"g\")\n\t\t\t\t.attr(\"class\", \"d3-exploding-boxplot outliers-points\")\n\t\t\t\t.selectAll(\".point\")\n\t\t\t\t.data(box_data[\"$outlier\"])\n\t\t\t\t.enter()\n\t\t\t\t\t.append(\"circle\")\n\t\t\t\t\t.call((s) => { // init + draw jitter\n\t\t\t\t\t\ts.attr(\"class\", \"d3-exploding-boxplot point\")\n\t\t\t\t\t\t\t.attr(\"r\", radius)\n\t\t\t\t\t\t\t.style(\"fill\", (d) => {return calculateCircleColor(d.hospital, this.props.year)})\n\t\t\t\t\t\t\t.attr(\"cx\", function(d){\n\t\t\t\t\t\t\t\treturn Math.floor(Math.random() * width * 0.8);\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t.attr(\"cy\",function(d){\n\t\t\t\t\t\t\t\treturn yscale(d.value)\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t.on(\"mouseover\", mouseover)\n\t\t\t\t\t\t\t.on(\"mousemove\", mousemove)\n\t\t\t\t\t\t\t.on(\"mouseleave\", mouseleave)\n\t\t\t\t\t\t\t.on(\"click\", mouseclick);\n\t\t\t\t\t});\n\t\tlet box = boxContent.append(\"g\")\n\t\t\t.attr(\"class\", \"d3-exploding-boxplot normal-points\")\n\t\t\t.append(\"g\")\n\t\t\t\t.attr(\"class\", \"d3-exploding-boxplot box\")\n\t\t\t\t.on(\"click\", (d) => {\n\t\t\t\t\tthis.explode_boxplot(width, radius, yscale, quartiles, box_data, mouseover, mousemove, mouseleave, mouseclick);\n\t\t\t\t});\n\n\t\t//box\n\t\tbox.append(\"rect\").attr(\"class\", \"d3-exploding-boxplot box\")\n\t\t//median line\n\t\tbox.append(\"line\").attr(\"class\", \"d3-exploding-boxplot median line\")\n\t\t\t.on(\"mouseover\", () => {return mouseover({hospital:{name:this.props.t('boxPlot.median')}})})\n\t\t\t.on(\"mousemove\", mousemove)\n\t\t\t.on(\"mouseleave\", mouseleave);\n\t\t//min line\n\t\tbox.append(\"line\").attr(\"class\",\"d3-exploding-boxplot min line hline\")\n\t\t\t.on(\"mouseover\", () => {return mouseover({hospital:{name:this.props.t('boxPlot.minimum')}})})\n\t\t\t.on(\"mousemove\", mousemove)\n\t\t\t.on(\"mouseleave\", mouseleave);\n\t\t//min vline\n\t\tbox.append(\"line\").attr(\"class\",\"d3-exploding-boxplot line min vline\");\n\t\t//max line\n\t\tbox.append(\"line\").attr(\"class\",\"d3-exploding-boxplot max line hline\")\n\t\t\t.on(\"mouseover\", () => {return mouseover({hospital:{name:this.props.t('boxPlot.maximum')}})})\n\t\t\t.on(\"mousemove\", mousemove)\n\t\t\t.on(\"mouseleave\", mouseleave);\n\t\t//max vline\n\t\tbox.append(\"line\").attr(\"class\",\"d3-exploding-boxplot line max vline\");\n\n\n\t\tthis.drawBox(width, yscale, quartiles, min, max);\n\t}\n\n\t/**\n\t* explodes the boxplot according to the given parameters (hides the boxplot box and draws points)\n\t*/\n\texplode_boxplot(width, radius, yscale, quartiles, box_data, mouseover, mousemove, mouseleave, mouseclick){\n\t\tvar trans = d3.select(\"#boxplot\").select(\"g.box\").transition()\n\t\t\t\t.ease(d3.easeBackIn)\n\t\t\t\t.duration(300);\n\t\t// hide boxplot box\n\t\ttrans.select('rect.box')\n\t\t\t\t\t.attr('x',width*0.5)\n\t\t\t\t\t.attr('width',0)\n\t\t\t\t\t.attr('y',yscale(quartiles[1]))\n\t\t\t\t\t.attr('height',0)\n\t\t//median line\n\t\ttrans.selectAll('line')\n\t\t\t\t\t.attr('x1',width*0.5)\n\t\t\t\t\t.attr('x2',width*0.5)\n\t\t\t\t\t.attr('y1',yscale(quartiles[1]))\n\t\t\t\t\t.attr('y2',yscale(quartiles[1]))\n\t\t// add the points\n\t\td3.select(\"#boxplot\").selectAll('.normal-points')\n\t\t\t\t.selectAll('.point')\n\t\t\t\t.data(box_data[\"$normal\"])\n\t\t\t\t.enter()\n\t\t\t\t\t.append('circle')\n\t\t\t\t\t.attr('cx',width*0.5)\n\t\t\t\t\t.attr('cy',yscale(quartiles[1]))\n\t\t\t\t\t.call((s) => {\n\t\t\t\t\t\ts.attr('class','d3-exploding-boxplot point')\n\t\t\t\t\t\t\t.attr('r',radius)\n\t\t\t\t\t\t\t.style(\"fill\", (d) => {return calculateCircleColor(d.hospital, this.props.year)})\n\t\t\t\t\t\t\t.on(\"mouseover\", mouseover)\n\t\t\t\t\t\t\t.on(\"mousemove\", mousemove)\n\t\t\t\t\t\t\t.on(\"mouseleave\", mouseleave)\n\t\t\t\t\t\t\t.on(\"click\", mouseclick);\n\t\t\t\t\t})\n\t\t\t\t\t.transition()\n\t\t\t\t\t.ease(d3.easeBackOut)\n\t\t\t\t\t.delay(function(){\n\t\t\t\t\t\treturn 300+100*Math.random()\n\t\t\t\t\t})\n\t\t\t\t\t.duration(function(){\n\t\t\t\t\t\treturn 300+300*Math.random()\n\t\t\t\t\t})\n\t\t\t\t\t.call(function(s){\n\t\t\t\t\t\ts.attr('cx',function(d){\n\t\t\t\t\t\t\treturn Math.floor(Math.random() * width * 0.8);\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.attr('cy',function(d){\n\t\t\t\t\t\t\treturn yscale(d.value);\n\t\t\t\t\t\t})\n\t\t\t\t\t});\n\t}\n\n\t/**\n\t* draws the boxplot box (according to the given parameters)\n\t*/\n\tdrawBox(width, yscale, quartiles, min, max) {\n\t\tlet box = d3.select(\"#boxplot\").selectAll(\"g.box\")\n\t\t\t.transition()\n\t\t\t\t.ease(d3.easeBackOut)\n\t\t\t\t.duration(300)\n\t\t\t\t.delay(200);\n\n\t\tbox.select('rect.box')\n\t\t\t.attr('x',width * 0.1)\n\t\t\t.attr('width', width * 0.8)\n\t\t\t.attr('y',yscale(quartiles[2]))\n\t\t\t.attr('height', function(d){\n\t\t\t\treturn yscale(quartiles[0])-yscale(quartiles[2])\n\t\t\t});\n\t\t//median line\n\t\tbox.select('line.median')\n\t\t\t.attr('x1',width * 0.1).attr('x2',width*0.9)\n\t\t\t.attr('y1',yscale(quartiles[1]))\n\t\t\t.attr('y2',yscale(quartiles[1]));\n\t\t//min line\n\t\tbox.select('line.min.hline')\n\t\t\t.attr('x1',width*0.25)\n\t\t\t.attr('x2',width*0.75)\n\t\t\t.attr('y1',yscale(Math.min(min,quartiles[0])))\n\t\t\t.attr('y2',yscale(Math.min(min,quartiles[0])));\n\t\t//min vline\n\t\tbox.select('line.min.vline')\n\t\t\t.attr('x1',width*0.5)\n\t\t\t.attr('x2',width*0.5)\n\t\t\t.attr('y1',yscale(Math.min(min,quartiles[0])))\n\t\t\t.attr('y2',yscale(quartiles[0]));\n\t\t//max line\n\t\tbox.select('line.max.hline')\n\t\t\t.attr('x1',width*0.25)\n\t\t\t.attr('x2',width*0.75)\n\t\t\t.attr('y1',yscale(Math.max(max,quartiles[2])))\n\t\t\t.attr('y2',yscale(Math.max(max,quartiles[2])));\n\t\t//max vline\n\t\tbox.select('line.max.vline')\n\t\t\t.attr('x1',width*0.5)\n\t\t\t.attr('x2',width*0.5)\n\t\t\t.attr('y1',yscale(quartiles[2]))\n\t\t\t.attr('y2',yscale(Math.max(max,quartiles[2])));\n\t}\n\n\t/**\n\t* hides the points and adds the boxplot box again\n\t*/\n\timplode_boxplot(width, yscale, quartiles, min, max) {\n\t\td3.select(\"#boxplot\").selectAll(\".normal-points\")\n\t\t\t.selectAll('circle')\n\t\t\t.transition()\n\t\t\t\t.ease(d3.easeBackOut)\n\t\t\t\t.duration(function(){\n\t\t\t\t\t\treturn 300+300*Math.random()\n\t\t\t\t})\n\t\t\t\t.attr(width*0.5)\n\t\t\t\t.attr('cy',yscale(quartiles[1]))\n\t\t\t\t.remove();\n\n\n\t\tlet trans = d3.select(\"#boxPlot\").select('.boxcontent')\n\t\t\t.transition()\n\t\t\t\t.ease(d3.easeBackOut)\n\t\t\t\t.duration(300)\n\t\t\t\t.delay(200);\n\n\t\ttrans.select('rect.box')\n\t\t\t.attr('x',0)\n\t\t\t.attr('width',width)\n\t\t\t.attr('y',yscale(quartiles[2]))\n\t\t\t.attr('height', function(d){\n\t\t\t\treturn yscale(quartiles[0])-yscale(quartiles[2])\n\t\t\t})\n\t\tthis.drawBox(width, yscale, quartiles, min, max);\n\t}\n\n\t/**\n\t* adds the popup div to the DOM\n\t*/\n\taddPopup = () =>{\n\t\td3.select(\"#boxplot .popup\").remove();\n\n\t\tvar popup = d3.select(\"#boxplot\")\n\t\t\t.append(\"div\")\n\t\t\t.style(\"display\", \"none\")\n\t\t\t.attr(\"class\", \"popup\");\n\n\t\tvar table = popup\n\t\t\t.append(\"table\");\n\n\t\tvar firstRow = table\n\t\t\t.append(\"tr\");\n\t\tfirstRow\n\t\t\t.append(\"td\")\n\t\t\t.text(this.props.t(\"popup.hospital\"));\n\t\tfirstRow\n\t\t\t.append(\"td\")\n\t\t\t.attr(\"class\", \"popupName\");\n\n\t\tvar secondRow = table\n\t\t\t.append(\"tr\");\n\t\tsecondRow\n\t\t\t.append(\"td\")\n\t\t\t.text(this.props.t(\"popup.address\"));\n\t\tsecondRow\n\t\t\t.append(\"td\")\n\t\t\t.attr(\"class\", \"popupAddress\");\n\n\t\tvar thirdRow = table\n\t\t\t.append(\"tr\");\n\t\tthirdRow\n\t\t\t.append(\"td\")\n\t\t\t.text(this.props.selectedVariable.text);\n\t\tthirdRow\n\t\t\t.append(\"td\")\n\t\t\t.attr(\"class\", \"popupVariable\");\n\t}\n\n\n\trender() {\n\t\treturn (\n        \t<div id=\"boxplot\"></div>\n        )\n\t}\n}\n\n/**\n * PropTypes:\n *\n * objects: list of hospitals with data\n * selectedVariable:  selected variable\n * year: selected year\n * hasLoaded: bool that will be true if the data is loaded\n */\n\nBoxPlot.propTypes = {\n\tobjects: PropTypes.array.isRequired,\n    selectedVariable: PropTypes.object.isRequired,\n    year: PropTypes.string.isRequired,\n    hasLoaded:PropTypes.bool.isRequired\n}\n\nconst LocalizedBoxPlot = withTranslation()(BoxPlot);\nexport default LocalizedBoxPlot;\n"]},"metadata":{},"sourceType":"module"}