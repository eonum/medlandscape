{"ast":null,"code":"import _classCallCheck from \"/Users/moriarty/Documents/UniBe/PSE/medlandscape/medlandscape-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/moriarty/Documents/UniBe/PSE/medlandscape/medlandscape-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/moriarty/Documents/UniBe/PSE/medlandscape/medlandscape-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/moriarty/Documents/UniBe/PSE/medlandscape/medlandscape-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/moriarty/Documents/UniBe/PSE/medlandscape/medlandscape-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/moriarty/Documents/UniBe/PSE/medlandscape/medlandscape-app/src/components/FilterEditor/FilterEditor.js\";\nimport React, { Component } from 'react';\nimport DropdownMenu from '../DropdownMenu/DropdownMenu.js';\nimport CheckboxList from '../CheckboxList/CheckboxList.js';\nimport { withTranslation } from 'react-i18next';\nimport './FilterEditor.css';\n\nvar FilterEditor =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(FilterEditor, _Component);\n\n  function FilterEditor() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, FilterEditor);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(FilterEditor)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      selectedValues: [],\n      titles: []\n    };\n\n    _this.dropdownSelectItem = function (item) {\n      var titles = [];\n\n      for (var i = 0; i < item.values.length; i++) {\n        titles.push(item.values[i] + \": \" + item.values_text[i]);\n      }\n\n      _this.props.setEnum(item).then(function () {\n        _this.setState({\n          selectedEnum: item,\n          selectedValues: [],\n          titles: titles\n        });\n      });\n    };\n\n    _this.checkboxSelectItem = function (item) {\n      if (_this.props.selectedEnum !== undefined) {\n        // removes item if in selectedValues\n        var values = _this.state.selectedValues.filter(function (value) {\n          return value !== item;\n        }); // adds item if not in selectedValues\n\n\n        if (values.length === _this.state.selectedValues.length) {\n          values.push(item);\n        }\n\n        _this.setState({\n          selectedValues: values\n        });\n\n        _this.filter(values);\n      }\n    };\n\n    _this.filter = function (selectedValues) {\n      var _this$props = _this.props,\n          selectedYear = _this$props.selectedYear,\n          hospitals = _this$props.hospitals;\n      var name = _this.props.selectedEnum.name;\n      console.log(\"name of selected Enum: \" + name);\n      console.log(hospitals);\n      var filteredHospitals = []; // type of filtering (inclusive:true = OR)\n\n      var inclusive = name === \"KT\" || name === \"LA\" || name === \"RForm\" || name === \"Typ\";\n\n      if (selectedValues.length > 0) {\n        filteredHospitals = hospitals.filter(function (hospital) {\n          // Enum variables to be filtered with \"OR\"\n          if (inclusive) {\n            var counter = 0;\n\n            if (selectedYear in hospital.attributes[name]) {\n              var values = hospital.attributes[name][selectedYear];\n\n              for (var i = 0; i < selectedValues.length; i++) {\n                if (values.includes(selectedValues[i])) {\n                  counter++;\n                }\n              }\n            }\n\n            if (counter === 0) {\n              return false;\n            }\n          } else {\n            // Enum variables to be filtered with \"AND\"\n            if (selectedYear in hospital.attributes[name]) {\n              var _values = hospital.attributes[name][selectedYear];\n\n              for (var _i = 0; _i < selectedValues.length; _i++) {\n                if (!_values.includes(selectedValues[_i])) {\n                  return false;\n                }\n              }\n            } else {\n              return false;\n            }\n          }\n\n          return true;\n        });\n\n        if (filteredHospitals.length === 0) {\n          console.log(\"no hits\");\n          filteredHospitals[0] = 0;\n        }\n      } else {\n        filteredHospitals = hospitals;\n      }\n\n      _this.props.filter(filteredHospitals);\n    };\n\n    return _this;\n  }\n\n  _createClass(FilterEditor, [{\n    key: \"render\",\n    value: function render() {\n      var t = this.props.t;\n      return React.createElement(\"div\", {\n        className: \"filter-editor\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, React.createElement(DropdownMenu, {\n        id: \"filterDropDown\",\n        listItems: this.props.variables,\n        selectItem: this.dropdownSelectItem,\n        selectedItem: this.props.selectedEnum,\n        defaultText: t('dropDowns.filterFallback'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }), this.props.selectedEnum !== undefined ? React.createElement(\"div\", {\n        className: \"filterCheckbox\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, t('mapView.checkbox')), React.createElement(CheckboxList, {\n        items: this.props.selectedEnum.values,\n        checkboxSelectItem: this.checkboxSelectItem,\n        titles: this.state.titles,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      })) : null);\n    }\n  }]);\n\n  return FilterEditor;\n}(Component);\n/**\n * Convert the component using withTranslation() to have access to t() function\n *  and other i18next props. Then export it.\n */\n\n\nvar LocalizedFilterEditor = withTranslation()(FilterEditor);\nexport default LocalizedFilterEditor;","map":{"version":3,"sources":["/Users/moriarty/Documents/UniBe/PSE/medlandscape/medlandscape-app/src/components/FilterEditor/FilterEditor.js"],"names":["React","Component","DropdownMenu","CheckboxList","withTranslation","FilterEditor","state","selectedValues","titles","dropdownSelectItem","item","i","values","length","push","values_text","props","setEnum","then","setState","selectedEnum","checkboxSelectItem","undefined","filter","value","selectedYear","hospitals","name","console","log","filteredHospitals","inclusive","hospital","counter","attributes","includes","t","variables","LocalizedFilterEditor"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport DropdownMenu from '../DropdownMenu/DropdownMenu.js';\nimport CheckboxList from '../CheckboxList/CheckboxList.js';\nimport { withTranslation } from 'react-i18next';\nimport './FilterEditor.css'\n\nclass FilterEditor extends Component {\n\tstate = {\n        selectedValues : [],\n\t\ttitles : [],\n\t};\n\n\t/**\n    *\n    */\n    dropdownSelectItem = (item) => {\n\t\tlet titles = [];\n\t\tfor (let i = 0; i < item.values.length; i++)\n\t\ttitles.push(item.values[i] + \": \" + item.values_text[i]);\n\n\t\tthis.props.setEnum(item).then(() => {\n\t\t\tthis.setState({\n\t\t\t\tselectedEnum : item,\n\t\t\t\tselectedValues : [],\n\t\t\t\ttitles : titles,\n\t\t\t});\n\t\t});\n\t}\n\n    /**\n     *\n     * @param  {[type]} item [description]\n     * @return {[type]}      [description]\n     */\n    checkboxSelectItem = (item) => {\n\n\t\tif (this.props.selectedEnum !== undefined) {\n\t\t\t// removes item if in selectedValues\n\t\t\tlet values = this.state.selectedValues.filter((value) => {\n\t\t\t\treturn (value !== item)\n\t\t\t});\n\n\t\t\t// adds item if not in selectedValues\n\t\t\tif (values.length === this.state.selectedValues.length) {\n\t\t\t\tvalues.push(item);\n\t\t\t}\n\n\t\t\tthis.setState({\n\t\t\t\tselectedValues : values\n\t\t\t});\n\n\t\t\tthis.filter(values);\n\t\t}\n\n    }\n\n    /**\n     * [filter description]\n     * @param  {[type]} selectedValues [description]\n     * @return {[type]}                [description]\n     */\n\tfilter = (selectedValues) => {\n\t\tconst {selectedYear, hospitals} = this.props;\n        const {name} = this.props.selectedEnum;\n\n\t\tconsole.log(\"name of selected Enum: \" + name);\n\t\tconsole.log(hospitals);\n\n\t\tlet filteredHospitals =  [];\n\n\t\t// type of filtering (inclusive:true = OR)\n\t\tlet inclusive = (name === \"KT\" || name === \"LA\" || name === \"RForm\" || name === \"Typ\");\n\n\t\tif (selectedValues.length > 0) {\n\t\t\tfilteredHospitals = hospitals.filter((hospital) => {\n\t\t\t\t// Enum variables to be filtered with \"OR\"\n\t\t\t\tif (inclusive) {\n\t\t\t\t\tlet counter = 0;\n\t\t\t\t\tif (selectedYear in hospital.attributes[name]) {\n\t\t\t\t\t\tconst values = hospital.attributes[name][selectedYear];\n\t\t\t\t\t\tfor (let i = 0; i < selectedValues.length; i++) {\n\t\t\t\t\t\t\tif (values.includes(selectedValues[i])) {\n\t\t\t\t\t\t\t\tcounter++;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (counter === 0) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t} else { // Enum variables to be filtered with \"AND\"\n\t\t\t\t\tif (selectedYear in hospital.attributes[name]) {\n\t\t\t\t\t\tconst values = hospital.attributes[name][selectedYear];\n\t\t\t\t\t\tfor (let i = 0; i < selectedValues.length; i++) {\n\t\t\t\t\t\t\tif (!values.includes(selectedValues[i])) {\n\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t});\n\t\t\tif (filteredHospitals.length === 0) {\n\t\t\t\tconsole.log(\"no hits\");\n\t\t\t\tfilteredHospitals[0] = 0;\n\t\t\t}\n\t\t} else {\n\t\t\tfilteredHospitals = hospitals;\n\t\t}\n\n\t\tthis.props.filter(filteredHospitals);\n\t}\n\n    render () {\n        const { t } = this.props;\n        return (\n\t\t\t<div className=\"filter-editor\">\n\t\t\t\t<DropdownMenu id=\"filterDropDown\" listItems={this.props.variables} selectItem={this.dropdownSelectItem} selectedItem={this.props.selectedEnum} defaultText={t('dropDowns.filterFallback')}/>\n                {\n\t\t\t\t\t(this.props.selectedEnum !== undefined)\n\t\t\t\t\t?\n\t\t\t\t\t<div className=\"filterCheckbox\">\n\t\t\t\t\t\t<p>{t('mapView.checkbox')}</p>\n\t\t\t\t\t\t<CheckboxList items={this.props.selectedEnum.values} checkboxSelectItem={this.checkboxSelectItem} titles={this.state.titles} />\n\t\t\t\t\t</div>\n\t\t\t\t\t: null\n\t\t\t\t}\n\t\t\t</div>\n        );\n    }\n}\n\n/**\n * Convert the component using withTranslation() to have access to t() function\n *  and other i18next props. Then export it.\n */\nconst LocalizedFilterEditor = withTranslation()(FilterEditor);\nexport default LocalizedFilterEditor;\n"]},"metadata":{},"sourceType":"module"}