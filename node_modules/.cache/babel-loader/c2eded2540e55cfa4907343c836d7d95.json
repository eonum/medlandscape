{"ast":null,"code":"import _classCallCheck from \"/Users/moriarty/Documents/UniBe/PSE/medlandscape/medlandscape-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/moriarty/Documents/UniBe/PSE/medlandscape/medlandscape-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/moriarty/Documents/UniBe/PSE/medlandscape/medlandscape-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/moriarty/Documents/UniBe/PSE/medlandscape/medlandscape-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/moriarty/Documents/UniBe/PSE/medlandscape/medlandscape-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/moriarty/Documents/UniBe/PSE/medlandscape/medlandscape-app/src/components/FilterEditor/FilterEditor.js\";\nimport React, { Component } from 'react';\nimport DropdownMenu from '../DropdownMenu/DropdownMenu.js';\nimport CheckboxList from '../CheckboxList/CheckboxList.js';\n/**\n * Example component to show how to work with react-i18next localization\n */\n\nvar FilterEditor =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(FilterEditor, _Component);\n\n  function FilterEditor() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, FilterEditor);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(FilterEditor)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      variables: [],\n      selectedVariable: undefined,\n      selectedValues: []\n    };\n\n    _this.findEnumVariables = function () {\n      var i;\n      var enumVariables = [];\n\n      for (i = 0; i < _this.props.variables.length; i++) {\n        if (_this.props.variables[i].variable_type == \"enum\") {\n          enumVariables.push(_this.props.variables[i]);\n        }\n      }\n\n      return enumVariables;\n    };\n\n    _this.dropdownSelectItem = function (item) {\n      _this.setState({\n        selectedVariable: item,\n        selectedValues: []\n      });\n    };\n\n    _this.checkboxSelectItem = function (item) {\n      var values = _this.state.selectedValues;\n      var index = values.indexOf(item);\n      if (index !== -1) values.splice(index, 1);else values.push(item);\n\n      _this.setState({\n        selectedValues: values\n      });\n\n      console.log(_this.state.selectedValues);\n    };\n\n    _this.filter = function () {\n      if (_this.props.hasLoaded) {}\n    };\n\n    return _this;\n  }\n\n  _createClass(FilterEditor, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      if (this.props.hasLoaded && this.state.variables.length == 0) {\n        var enumVariables = this.findEnumVariables();\n        this.setState({\n          variables: enumVariables\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"control-panel\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(DropdownMenu, {\n        id: \"filterDropDown\",\n        listItems: this.state.variables,\n        selectItem: this.dropdownSelectItem,\n        selectedItem: this.state.selectedVariable,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }), this.state.selectedVariable !== undefined ? React.createElement(CheckboxList, {\n        objects: this.state.selectedVariable.values,\n        checkboxSelectItem: this.checkboxSelectItem,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }) : null);\n    }\n  }]);\n\n  return FilterEditor;\n}(Component);\n\nexport default FilterEditor;","map":{"version":3,"sources":["/Users/moriarty/Documents/UniBe/PSE/medlandscape/medlandscape-app/src/components/FilterEditor/FilterEditor.js"],"names":["React","Component","DropdownMenu","CheckboxList","FilterEditor","state","variables","selectedVariable","undefined","selectedValues","findEnumVariables","i","enumVariables","props","length","variable_type","push","dropdownSelectItem","item","setState","checkboxSelectItem","values","index","indexOf","splice","console","log","filter","hasLoaded"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,YAAP,MAAyB,iCAAzB;AACA,OAAOC,YAAP,MAAyB,iCAAzB;AAEA;;;;IAGMC,Y;;;;;;;;;;;;;;;;;UACLC,K,GAAQ;AACPC,MAAAA,SAAS,EAAE,EADJ;AAEDC,MAAAA,gBAAgB,EAAEC,SAFjB;AAGDC,MAAAA,cAAc,EAAE;AAHf,K;;UAcRC,iB,GAAoB,YAAM;AACzB,UAAIC,CAAJ;AACA,UAAIC,aAAa,GAAG,EAApB;;AAEA,WAAID,CAAC,GAAG,CAAR,EAAWA,CAAC,GAAG,MAAKE,KAAL,CAAWP,SAAX,CAAqBQ,MAApC,EAA4CH,CAAC,EAA7C,EAAgD;AAC/C,YAAG,MAAKE,KAAL,CAAWP,SAAX,CAAqBK,CAArB,EAAwBI,aAAxB,IAAyC,MAA5C,EAAoD;AACnDH,UAAAA,aAAa,CAACI,IAAd,CAAmB,MAAKH,KAAL,CAAWP,SAAX,CAAqBK,CAArB,CAAnB;AACA;AACD;;AACD,aAAOC,aAAP;AACA,K;;UAKEK,kB,GAAqB,UAACC,IAAD,EAAU;AAC3B,YAAKC,QAAL,CAAc;AACVZ,QAAAA,gBAAgB,EAAGW,IADT;AAEVT,QAAAA,cAAc,EAAG;AAFP,OAAd;AAIH,K;;UAEDW,kB,GAAqB,UAACF,IAAD,EAAU;AAC3B,UAAIG,MAAM,GAAG,MAAKhB,KAAL,CAAWI,cAAxB;AACA,UAAIa,KAAK,GAAGD,MAAM,CAACE,OAAP,CAAeL,IAAf,CAAZ;AACA,UAAII,KAAK,KAAK,CAAC,CAAf,EACID,MAAM,CAACG,MAAP,CAAcF,KAAd,EAAqB,CAArB,EADJ,KAEKD,MAAM,CAACL,IAAP,CAAYE,IAAZ;;AACL,YAAKC,QAAL,CAAc;AACVV,QAAAA,cAAc,EAAGY;AADP,OAAd;;AAGAI,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAKrB,KAAL,CAAWI,cAAvB;AACH,K;;UAEJkB,M,GAAS,YAAM;AACd,UAAI,MAAKd,KAAL,CAAWe,SAAf,EAAyB,CAClB;AACP,K;;;;;;;yCA7CoB;AACpB,UAAG,KAAKf,KAAL,CAAWe,SAAX,IAAwB,KAAKvB,KAAL,CAAWC,SAAX,CAAqBQ,MAArB,IAA+B,CAA1D,EAA4D;AAE3D,YAAIF,aAAa,GAAG,KAAKF,iBAAL,EAApB;AACA,aAAKS,QAAL,CAAc;AAACb,UAAAA,SAAS,EAAEM;AAAZ,SAAd;AACA;AACD;;;6BAyCY;AACN,aACL;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC,oBAAC,YAAD;AAAc,QAAA,EAAE,EAAC,gBAAjB;AAAkC,QAAA,SAAS,EAAE,KAAKP,KAAL,CAAWC,SAAxD;AAAmE,QAAA,UAAU,EAAE,KAAKW,kBAApF;AAAwG,QAAA,YAAY,EAAE,KAAKZ,KAAL,CAAWE,gBAAjI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADD,EAEe,KAAKF,KAAL,CAAWE,gBAAX,KAAgCC,SAAjC,GAA8C,oBAAC,YAAD;AAAc,QAAA,OAAO,EAAE,KAAKH,KAAL,CAAWE,gBAAX,CAA4Bc,MAAnD;AAA2D,QAAA,kBAAkB,EAAE,KAAKD,kBAApF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAA9C,GAA2J,IAFzK,CADK;AAMH;;;;EA7DsBnB,S;;AAgE3B,eAAeG,YAAf","sourcesContent":["import React, { Component } from 'react';\nimport DropdownMenu from '../DropdownMenu/DropdownMenu.js';\nimport CheckboxList from '../CheckboxList/CheckboxList.js';\n\n/**\n * Example component to show how to work with react-i18next localization\n */\nclass FilterEditor extends Component {\n\tstate = {\n\t\tvariables: [],\n        selectedVariable: undefined,\n        selectedValues: [],\n\t};\n\n\tcomponentDidUpdate() {\n\t\tif(this.props.hasLoaded && this.state.variables.length == 0){\n\n\t\t\tlet enumVariables = this.findEnumVariables()\n\t\t\tthis.setState({variables: enumVariables});\n\t\t}\n\t}\n\n\tfindEnumVariables = () => {\n\t\tlet i;\n\t\tlet enumVariables = [];\n\n\t\tfor(i = 0; i < this.props.variables.length; i++){\n\t\t\tif(this.props.variables[i].variable_type == \"enum\") {\n\t\t\t\tenumVariables.push(this.props.variables[i]);\n\t\t\t}\n\t\t}\n\t\treturn enumVariables;\n\t}\n\n\t/**\n    *\n    */\n    dropdownSelectItem = (item) => {\n        this.setState({\n            selectedVariable : item,\n            selectedValues : [],\n        });\n    }\n\n    checkboxSelectItem = (item) => {\n        let values = this.state.selectedValues;\n        let index = values.indexOf(item);\n        if (index !== -1)\n            values.splice(index, 1);\n        else values.push(item);\n        this.setState({\n            selectedValues : values,\n        });\n        console.log(this.state.selectedValues);\n    }\n\n\tfilter = () => {\n\t\tif (this.props.hasLoaded){\n        }\n\t}\n\n    render () {\n        return (\n\t\t\t<div className=\"control-panel\">\n\t\t\t\t<DropdownMenu id=\"filterDropDown\" listItems={this.state.variables} selectItem={this.dropdownSelectItem} selectedItem={this.state.selectedVariable} />\n                {(this.state.selectedVariable !== undefined) ? <CheckboxList objects={this.state.selectedVariable.values} checkboxSelectItem={this.checkboxSelectItem} /> : null}\n\t\t\t</div>\n        );\n    }\n}\n\nexport default FilterEditor;\n"]},"metadata":{},"sourceType":"module"}